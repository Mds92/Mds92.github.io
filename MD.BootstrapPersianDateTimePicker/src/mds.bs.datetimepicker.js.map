{"version":3,"file":"mds.bs.datetimepicker.js","mappings":"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","sources":["webpack://md.bootstrappersiandatetimepicker/external var \"bootstrap\"","webpack://md.bootstrappersiandatetimepicker/./src/mds.bs.datetimepicker.ts","webpack://md.bootstrappersiandatetimepicker/./node_modules/expose-loader/dist/runtime/getGlobalThis.js","webpack://md.bootstrappersiandatetimepicker/./src/mds.bs.datetimepicker-exposed.ts","webpack://md.bootstrappersiandatetimepicker/webpack/bootstrap","webpack://md.bootstrappersiandatetimepicker/webpack/runtime/define property getters","webpack://md.bootstrappersiandatetimepicker/webpack/runtime/global","webpack://md.bootstrappersiandatetimepicker/webpack/runtime/hasOwnProperty shorthand","webpack://md.bootstrappersiandatetimepicker/webpack/runtime/make namespace object","webpack://md.bootstrappersiandatetimepicker/webpack/startup"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = bootstrap;","﻿import { Modal, Popover } from \"bootstrap\";\r\n\r\nexport class MdsPersianDateTimePicker {\r\n  constructor(element: Element, setting: MdsPersianDateTimePickerSetting) {\r\n    setting = MdsPersianDateTimePicker.extend(new MdsPersianDateTimePickerSetting(), setting);\r\n    if (!element) throw new Error(`MdsPersianDateTimePicker => element is null!`);\r\n    if (setting.rangeSelector && (setting.toDate || setting.fromDate)) throw new Error(`MdsPersianDateTimePicker => You can not set true 'toDate' or 'fromDate' and 'rangeSelector' together`);\r\n    if (setting.toDate && setting.fromDate) throw new Error(`MdsPersianDateTimePicker => You can not set true 'toDate' and 'fromDate' together`);\r\n    if (!setting.groupId && (setting.toDate || setting.fromDate)) throw new Error(`MdsPersianDateTimePicker => When you set 'toDate' or 'fromDate' true, you have to set 'groupId'`);\r\n\r\n    if (!setting.textFormat) {\r\n      setting.textFormat = 'yyyy/MM/dd';\r\n      if (setting.enableTimePicker)\r\n        setting.textFormat += ' HH:mm';\r\n    }\r\n    if (!setting.dateFormat) {\r\n      setting.dateFormat = 'yyyy/MM/dd';\r\n      if (setting.enableTimePicker)\r\n        setting.dateFormat += ' HH:mm';\r\n    }\r\n    if (setting.yearOffset > 15)\r\n      setting.yearOffset = 15;\r\n\r\n    this.setting = setting;\r\n    this.setting.selectedDate = setting.selectedDate ? MdsPersianDateTimePicker.getClonedDate(setting.selectedDate) : null;\r\n    this.setting.selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(setting.selectedDateToShow) ?? new Date();\r\n\r\n    this.guid = MdsPersianDateTimePicker.newGuid();\r\n    this.element = element;\r\n    this.element.setAttribute(\"data-mds-dtp-guid\", this.guid);\r\n    MdsPersianDateTimePickerData.set(this.guid, this);\r\n\r\n    this.initializeBsPopover(setting);\r\n  }\r\n\r\n  // #region jalali calendar\r\n\r\n  private static toJalali(gy: number, gm: number, gd: number): JalaliJsonModel {\r\n    return this.d2j(this.g2d(gy, gm, gd));\r\n  }\r\n  private static toGregorian(jy: number, jm: number, jd: number): GregorianJsonModel {\r\n    return this.d2g(this.j2d(jy, jm, jd));\r\n  }\r\n  // private static isValidJalaliDate(jy: number, jm: number, jd: number): boolean {\r\n  //   return jy >= -61 && jy <= 3177 &&\r\n  //     jm >= 1 && jm <= 12 &&\r\n  //     jd >= 1 && jd <= this.jalaliMonthLength(jy, jm);\r\n  // }\r\n  private static isLeapJalaliYear(jy: number): boolean {\r\n    return this.jalCal(jy).leap === 0;\r\n  }\r\n  // private static jalaliMonthLength(jy: number, jm: number): number {\r\n  //   if (jm <= 6) return 31;\r\n  //   if (jm <= 11) return 30;\r\n  //   if (this.isLeapJalaliYear(jy)) return 30;\r\n  //   return 29;\r\n  // }\r\n  private static jalCal(jy: number): JalCalModel {\r\n    // Jalali years starting the 33-year rule.\r\n    let breaks = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178],\r\n      bl = breaks.length,\r\n      gy = jy + 621,\r\n      leapJ = -14,\r\n      jp = breaks[0],\r\n      jm,\r\n      jump = 1,\r\n      leap,\r\n      n,\r\n      i;\r\n\r\n    if (jy < jp || jy >= breaks[bl - 1])\r\n      throw new Error('Invalid Jalali year ' + jy);\r\n\r\n    // Find the limiting years for the Jalali year jy.\r\n    for (i = 1; i < bl; i += 1) {\r\n      jm = breaks[i];\r\n      jump = jm - jp;\r\n      if (jy < jm)\r\n        break;\r\n      leapJ = leapJ + this.div(jump, 33) * 8 + this.div(this.mod(jump, 33), 4);\r\n      jp = jm;\r\n    }\r\n    n = jy - jp;\r\n\r\n    // Find the number of leap years from AD 621 to the beginning\r\n    // of the current Jalali year in the Persian calendar.\r\n    leapJ = leapJ + this.div(n, 33) * 8 + this.div(this.mod(n, 33) + 3, 4);\r\n    if (this.mod(jump, 33) === 4 && jump - n === 4)\r\n      leapJ += 1;\r\n\r\n    // And the same in the Gregorian calendar (until the year gy).\r\n    let leapG = this.div(gy, 4) - this.div((this.div(gy, 100) + 1) * 3, 4) - 150;\r\n\r\n    // Determine the Gregorian date of Farvardin the 1st.\r\n    let march = 20 + leapJ - leapG;\r\n\r\n    // Find how many years have passed since the last leap year.\r\n    if (jump - n < 6)\r\n      n = n - jump + this.div(jump + 4, 33) * 33;\r\n    leap = this.mod(this.mod(n + 1, 33) - 1, 4);\r\n    if (leap === -1) leap = 4;\r\n\r\n    return {\r\n      leap: leap,\r\n      gy: gy,\r\n      march: march\r\n    };\r\n  }\r\n  private static j2d(jy: number, jm: number, jd: number): number {\r\n    let r = this.jalCal(jy);\r\n    return this.g2d(r.gy, 3, r.march) + (jm - 1) * 31 - this.div(jm, 7) * (jm - 7) + jd - 1;\r\n  }\r\n  private static d2j(jdn: number): JalaliJsonModel {\r\n    let gy = this.d2g(jdn).gy, // Calculate Gregorian year (gy).\r\n      jy = gy - 621,\r\n      r = this.jalCal(jy),\r\n      jdn1F = this.g2d(gy, 3, r.march),\r\n      jd,\r\n      jm,\r\n      k;\r\n\r\n    // Find number of days that passed since 1 Farvardin.\r\n    k = jdn - jdn1F;\r\n    if (k >= 0) {\r\n      if (k <= 185) {\r\n        // The first 6 months.\r\n        jm = 1 + this.div(k, 31);\r\n        jd = this.mod(k, 31) + 1;\r\n        return {\r\n          jy: jy,\r\n          jm: jm,\r\n          jd: jd\r\n        };\r\n      } else {\r\n        // The remaining months.\r\n        k -= 186;\r\n      }\r\n    } else {\r\n      // Previous Jalali year.\r\n      jy -= 1;\r\n      k += 179;\r\n      if (r.leap === 1)\r\n        k += 1;\r\n    }\r\n    jm = 7 + this.div(k, 30);\r\n    jd = this.mod(k, 30) + 1;\r\n    return {\r\n      jy: jy,\r\n      jm: jm,\r\n      jd: jd\r\n    };\r\n  }\r\n  private static g2d(gy: number, gm: number, gd: number): number {\r\n    let d = this.div((gy + this.div(gm - 8, 6) + 100100) * 1461, 4) +\r\n      this.div(153 * this.mod(gm + 9, 12) + 2, 5) +\r\n      gd - 34840408;\r\n    d = d - this.div(this.div(gy + 100100 + this.div(gm - 8, 6), 100) * 3, 4) + 752;\r\n    return d;\r\n  }\r\n  private static d2g(jdn: number): GregorianJsonModel {\r\n    let j;\r\n    j = 4 * jdn + 139361631;\r\n    j = j + this.div(this.div(4 * jdn + 183187720, 146097) * 3, 4) * 4 - 3908;\r\n    let i = this.div(this.mod(j, 1461), 4) * 5 + 308;\r\n    let gd = this.div(this.mod(i, 153), 5) + 1;\r\n    let gm = this.mod(this.div(i, 153), 12) + 1;\r\n    let gy = this.div(j, 1461) - 100100 + this.div(8 - gm, 6);\r\n    return {\r\n      gy: gy,\r\n      gm: gm,\r\n      gd: gd\r\n    };\r\n  }\r\n  private static div(a: number, b: number): number {\r\n    return ~~(a / b);\r\n  }\r\n  private static mod(a: number, b: number): number {\r\n    return a - ~~(a / b) * b;\r\n  }\r\n\r\n  //#endregion jalali calendar\r\n\r\n  // #region Template\r\n\r\n  private static modalHtmlTemplate =\r\n    `<div data-mds-dtp data-mds-dtp-guid=\"{{guid}}\" class=\"modal fade mds-bs-persian-datetime-picker-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n\t  <div class=\"modal-content\">\r\n      <div class=\"modal-header\" data-mds-dtp-title=\"true\">\r\n        <h5 class=\"modal-title\">Modal title</h5>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"select-year-box w-0\" data-mds-dtp-year-list-box=\"true\"></div>\r\n        <div data-name=\"mds-dtp-body\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>`;\r\n  private static popoverHtmlTemplate = `<div class=\"popover mds-bs-persian-datetime-picker-popover\" role=\"tooltip\" data-mds-dtp>\r\n<div class=\"popover-arrow\"></div>\r\n<h3 class=\"popover-header text-center p-1\" data-mds-dtp-title=\"true\"></h3>\r\n<div class=\"popover-body p-0\" data-name=\"mds-dtp-body\"></div>\r\n</div>`;\r\n  private static popoverHeaderSelectYearHtmlTemplate = `<table class=\"table table-sm table-borderless text-center p-0 m-0 {{rtlCssClass}}\" dir=\"{{dirAttrValue}}\">\r\n<tr>\r\n<th>\r\n<button type=\"button\" class=\"btn btn-sm btn-light w-100\" title=\"{{previousText}}\" data-year=\"{{latestPreviousYear}}\" data-year-range-button-change=\"-1\" {{prevYearButtonAttr}}> &lt; </button>\r\n</th>\r\n<th class=\"pt-1\">\r\n{{yearsRangeText}}\r\n</th>\r\n<th>\r\n<button type=\"button\" class=\"btn btn-sm btn-light w-100\" title=\"{{nextText}}\" data-year=\"{{latestNextYear}}\" data-year-range-button-change=\"1\" {{nextYearButtonAttr}}> &gt; </button>\r\n</th>\r\n</tr>\r\n</table>`;\r\n  private static dateTimePickerYearsToSelectHtmlTemplate = `<table class=\"table table-sm text-center p-0 m-0\">\r\n<tbody>\r\n{{yearsBoxHtml}}\r\n<tr>\r\n<td colspan=\"100\" class=\"text-center\">\r\n<button class=\"btn btn-sm btn-light w-100\" data-mds-hide-year-list-box=\"true\">{{cancelText}}</button>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>`;\r\n\r\n  private static dateTimePickerHtmlTemplate = `<div class=\"mds-bs-dtp-container {{rtlCssClass}}\" {{inlineAttr}}>\r\n<div class=\"select-year-inline-box w-0\" data-name=\"dtp-years-container\">\r\n</div>\r\n<div class=\"select-year-box w-0\" data-mds-dtp-year-list-box=\"true\"></div>\r\n<table class=\"table table-sm text-center p-0 m-0\">\r\n<thead>\r\n<tr {{selectedDateStringAttribute}}>\r\n<th mds-dtp-inline-header colspan=\"100\">{{dtpInlineHeader}}</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n{{monthsTdHtml}}\r\n</tr>\r\n</tbody>\r\n<tfoot>\r\n<tr {{timePickerAttribute}}>\r\n<td colspan=\"100\" class=\"text-center border-0\">\r\n<input type=\"time\" value=\"{{time}}\" maxlength=\"2\" data-mds-dtp-time />\r\n</td>\r\n</tr>\r\n<tr>\r\n<td colspan=\"100\">\r\n<button type=\"button\" class=\"btn btn-light\" title=\"{{goTodayText}}\" data-mds-dtp-go-today>{{todayDateString}}</button>\r\n</td>\r\n</tr>\r\n</tfoot>\r\n</table>\r\n</div>`;\r\n\r\n  private static dateTimePickerMonthTableHtmlTemplate = `<td class=\"border-0\" style=\"{{monthTdStyle}}\" {{monthTdAttribute}} data-td-month>\r\n<table class=\"table table-sm table-striped table-borderless\">\r\n<thead>\r\n<tr {{monthNameAttribute}}>\r\n<th colspan=\"100\" class=\"border-0\">\r\n<table class=\"table table-sm table-borderless\">\r\n<thead>\r\n<tr>\r\n<th>\r\n<button type=\"button\" class=\"btn btn-light\"> {{currentMonthInfo}} </button>\r\n</th>\r\n</tr>\r\n</thead>\r\n</table>\r\n</th>\r\n</tr>\r\n<tr {{theadSelectDateButtonTrAttribute}}>\r\n<td colspan=\"100\" class=\"border-0\">\r\n<table class=\"table table-sm table-borderless\">\r\n<tr>\r\n<th>\r\n<button type=\"button\" class=\"btn btn-light btn-sm w-100\" title=\"{{previousYearText}}\" data-change-date-button=\"true\" data-number=\"{{previousYearButtonDateNumber}}\" {{previousYearButtonDisabledAttribute}}> &lt;&lt; </button>\r\n</th>\r\n<th>\r\n<button type=\"button\" class=\"btn btn-light btn-sm w-100\" title=\"{{previousMonthText}}\" data-change-date-button=\"true\" data-number=\"{{previousMonthButtonDateNumber}}\" {{previousMonthButtonDisabledAttribute}}> &lt; </button>\r\n</th>\r\n<th style=\"width: 120px;\">\r\n<div class=\"dropdown\">\r\n<button type=\"button\" class=\"btn btn-light btn-sm dropdown-toggle w-100\" id=\"mdtp-month-selector-button-{{guid}}\"\r\ndata-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n{{selectedMonthName}}\r\n</button>\r\n<div class=\"dropdown-menu\" aria-labelledby=\"mdtp-month-selector-button-{{guid}}\">\r\n<a class=\"dropdown-item {{selectMonth1ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth1DateNumber}}\">{{monthName1}}</a>\r\n<a class=\"dropdown-item {{selectMonth2ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth2DateNumber}}\">{{monthName2}}</a>\r\n<a class=\"dropdown-item {{selectMonth3ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth3DateNumber}}\">{{monthName3}}</a>\r\n<div class=\"dropdown-divider\"></div>\r\n<a class=\"dropdown-item {{selectMonth4ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth4DateNumber}}\">{{monthName4}}</a>\r\n<a class=\"dropdown-item {{selectMonth5ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth5DateNumber}}\">{{monthName5}}</a>\r\n<a class=\"dropdown-item {{selectMonth6ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth6DateNumber}}\">{{monthName6}}</a>\r\n<div class=\"dropdown-divider\"></div>\r\n<a class=\"dropdown-item {{selectMonth7ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth7DateNumber}}\">{{monthName7}}</a>\r\n<a class=\"dropdown-item {{selectMonth8ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth8DateNumber}}\">{{monthName8}}</a>\r\n<a class=\"dropdown-item {{selectMonth9ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth9DateNumber}}\">{{monthName9}}</a>\r\n<div class=\"dropdown-divider\"></div>\r\n<a class=\"dropdown-item {{selectMonth10ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth10DateNumber}}\">{{monthName10}}</a>\r\n<a class=\"dropdown-item {{selectMonth11ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth11DateNumber}}\">{{monthName11}}</a>\r\n<a class=\"dropdown-item {{selectMonth12ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth12DateNumber}}\">{{monthName12}}</a>\r\n</div>\r\n</div>\r\n</th>\r\n<th style=\"width: 50px;\">\r\n<button type=\"button\" class=\"btn btn-light btn-sm w-100\" mds-pdtp-select-year-button {{selectYearButtonDisabledAttribute}}>{{selectedYear}}</button>\r\n</th>\r\n<th>\r\n<button type=\"button\" class=\"btn btn-light btn-sm w-100\" title=\"{{nextMonthText}}\" data-change-date-button=\"true\" data-number=\"{{nextMonthButtonDateNumber}}\" {{nextMonthButtonDisabledAttribute}}> &gt; </button>\r\n</th>\r\n<th>\r\n<button type=\"button\" class=\"btn btn-light btn-sm w-100\" title=\"{{nextYearText}}\" data-change-date-button=\"true\" data-number=\"{{nextYearButtonDateNumber}}\" {{nextYearButtonDisabledAttribute}}> &gt;&gt; </button>\r\n</th>\r\n</tr>\r\n</table>\r\n</td>\r\n</tr>\r\n</thead>\r\n<tbody class=\"days\">\r\n<tr>\r\n<td class=\"{{weekDayShortName1CssClass}}\">{{weekDayShortName1}}</td>\r\n<td>{{weekDayShortName2}}</td>\r\n<td>{{weekDayShortName3}}</td>\r\n<td>{{weekDayShortName4}}</td>\r\n<td>{{weekDayShortName5}}</td>\r\n<td>{{weekDayShortName6}}</td>\r\n<td class=\"{{weekDayShortName7CssClass}}\">{{weekDayShortName7}}</td>\r\n</tr>\r\n{{daysHtml}}\r\n</tbody>\r\n</table>\r\n</td>`;\r\n\r\n  private static previousYearTextPersian = 'سال قبل';\r\n  private static previousMonthTextPersian = 'ماه قبل';\r\n  private static previousTextPersian = 'قبلی';\r\n  private static nextYearTextPersian = 'سال بعد';\r\n  private static nextMonthTextPersian = 'ماه بعد';\r\n  private static nextTextPersian = 'بعدی';\r\n  private static todayTextPersian = 'امروز';\r\n  private static goTodayTextPersian = 'برو به امروز';\r\n  private static cancelTextPersian = 'انصراف';\r\n  private static currentYearTextPersian = 'سال جاری';\r\n  private static previousText = 'Previous';\r\n  private static previousYearText = 'Previous Year';\r\n  private static previousMonthText = 'Previous Month';\r\n  private static nextText = 'Next';\r\n  private static nextYearText = 'Next Year';\r\n  private static nextMonthText = 'Next Month';\r\n  private static todayText = 'Today';\r\n  private static goTodayText = 'Go Today';\r\n  private static cancelText = 'Cancel';\r\n  private static currentYearText = 'Current Year';\r\n  private static shortDayNamesPersian = [\r\n    'ش',\r\n    'ی',\r\n    'د',\r\n    'س',\r\n    'چ',\r\n    'پ',\r\n    'ج',\r\n  ];\r\n  private static shortDayNames = [\r\n    'Su',\r\n    'Mo',\r\n    'Tu',\r\n    'We',\r\n    'Th',\r\n    'Fr',\r\n    'Sa',\r\n  ];\r\n  private static monthNamesPersian = [\r\n    'فروردین',\r\n    'اردیبهشت',\r\n    'خرداد',\r\n    'تیر',\r\n    'مرداد',\r\n    'شهریور',\r\n    'مهر',\r\n    'آبان',\r\n    'آذر',\r\n    'دی',\r\n    'بهمن',\r\n    'اسفند'\r\n  ];\r\n  private static monthNames = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n  ];\r\n  private static weekDayNames = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday'\r\n  ];\r\n  private static weekDayNamesPersian = [\r\n    'یک شنبه',\r\n    'دوشنبه',\r\n    'سه شنبه',\r\n    'چهارشنبه',\r\n    'پنج شنبه',\r\n    'جمعه',\r\n    'شنبه'\r\n  ];\r\n\r\n  // #endregion\r\n\r\n  // #region Properties\r\n\r\n  readonly guid: string = '';\r\n  readonly setting: MdsPersianDateTimePickerSetting;\r\n\r\n  private readonly element: Element;\r\n\r\n  private bsPopover: Popover | null = null;\r\n  private bsModal: Modal | null = null;\r\n  private tempTitleString = '';\r\n\r\n  // #endregion\r\n\r\n  // #region Methods\r\n\r\n  private initializeBsPopover(setting: MdsPersianDateTimePickerSetting): void {\r\n\r\n    // Validation\r\n\r\n    if (setting.rangeSelector && (setting.toDate || setting.fromDate))\r\n      throw new Error(`MdsPersianDateTimePicker => You can not set true 'toDate' or 'fromDate' and 'rangeSelector' together`);\r\n    if (setting.toDate && setting.fromDate)\r\n      throw new Error(`MdsPersianDateTimePicker => You can not set true 'toDate' and 'fromDate' together`);\r\n    if (!setting.groupId && (setting.toDate || setting.fromDate))\r\n      throw new Error(`MdsPersianDateTimePicker => When you set 'toDate' or 'fromDate' true, you have to set 'groupId'`);\r\n\r\n    // ---------------------\r\n\r\n    // آپشن هایی که باید همان لحظه تغییر اعمال شوند\r\n\r\n    if (setting.disabled) {\r\n      this.element.setAttribute(\"disabled\", '');\r\n    } else {\r\n      this.element.removeAttribute(\"disabled\");\r\n    }\r\n    if (setting.toDate || setting.fromDate) {\r\n      setting.rangeSelector = false;\r\n      this.element.setAttribute(\"data-mds-dtp-group\", setting.groupId);\r\n      if (setting.toDate)\r\n        this.element.setAttribute(\"data-to-date\", 'true');\r\n      else if (setting.fromDate)\r\n        this.element.setAttribute(\"data-from-date\", 'true');\r\n    }\r\n    if (!setting.rangeSelector) {\r\n      setting.rangeSelectorMonthsToShow = [0, 0];\r\n    }\r\n\r\n    // ---------------------\r\n\r\n    setTimeout(() => {\r\n      this.dispose();\r\n      const title = this.getPopoverHeaderTitle(setting);\r\n      let datePickerBodyHtml = this.getDateTimePickerBodyHtml(setting);\r\n      let tempDiv = document.createElement('div');\r\n      tempDiv.innerHTML = datePickerBodyHtml;\r\n      const dropDowns = tempDiv.querySelectorAll('.dropdown>button');\r\n      dropDowns.forEach(e => {\r\n        if (setting.disabled) {\r\n          e.setAttribute('disabled', '');\r\n          e.classList.add('disabled');\r\n        }\r\n        else {\r\n          e.removeAttribute('disabled');\r\n          e.classList.remove('disabled');\r\n        }\r\n      });\r\n      datePickerBodyHtml = tempDiv.innerHTML;\r\n      if (setting.modalMode == true) {\r\n        this.setModalHtml(title, datePickerBodyHtml, setting);\r\n        this.bsPopover = null;\r\n        setTimeout(() => {\r\n          const el = this.getModal();\r\n          if (el != null) {\r\n            this.bsModal = new Modal(el);\r\n            this.enableMainEvents();\r\n          }\r\n        }, 200);\r\n      } else if (setting.inLine == true) {\r\n        this.bsPopover = null;\r\n        this.element.innerHTML = datePickerBodyHtml;\r\n        this.enableInLineEvents();\r\n      } else {\r\n        this.bsPopover = new Popover(this.element, {\r\n          container: 'body',\r\n          content: datePickerBodyHtml,\r\n          title: title,\r\n          html: true,\r\n          placement: setting.placement,\r\n          trigger: 'manual',\r\n          template: MdsPersianDateTimePicker.popoverHtmlTemplate,\r\n          sanitize: false,\r\n        });\r\n        this.enableMainEvents();\r\n      }\r\n      MdsPersianDateTimePicker.setSelectedData(setting);\r\n      this.tempTitleString = title;\r\n    }, setting.inLine ? 10 : 100);\r\n  }\r\n  private static newGuid(): string {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n      let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n      return v.toString(16);\r\n    });\r\n  }\r\n  private static extend(...args: any[]): any {\r\n    for (let i = 1; i < args.length; i++)\r\n      for (let key in args[i])\r\n        if (args[i].hasOwnProperty(key))\r\n          args[0][key] = args[i][key];\r\n    return args[0];\r\n  }\r\n  private static getClonedDate(dateTime: Date): Date {\r\n    return new Date(dateTime.getTime());\r\n  }\r\n  private static getDateTimeJson1(dateTime: Date): GetDateTimeJson1 {\r\n    return {\r\n      year: dateTime.getFullYear(),\r\n      month: dateTime.getMonth() + 1,\r\n      day: dateTime.getDate(),\r\n      hour: dateTime.getHours(),\r\n      minute: dateTime.getMinutes(),\r\n      second: dateTime.getSeconds(),\r\n      millisecond: dateTime.getMilliseconds(),\r\n      dayOfWeek: dateTime.getDay()\r\n    };\r\n  }\r\n  private static getDateTimeJson2(dateNumber: number): GetDateTimeJson1 {\r\n    return {\r\n      year: Math.floor(dateNumber / 10000),\r\n      month: Math.floor(dateNumber / 100) % 100,\r\n      day: dateNumber % 100,\r\n      hour: 0,\r\n      minute: 0,\r\n      second: 0,\r\n      millisecond: 0,\r\n      dayOfWeek: -1\r\n    };\r\n  }\r\n  private static getDateTimeJsonPersian1(dateTime: Date): GetDateTimeJson1 {\r\n    let persianDate = this.toJalali(dateTime.getFullYear(), dateTime.getMonth() + 1, dateTime.getDate());\r\n    return {\r\n      year: persianDate.jy,\r\n      month: persianDate.jm,\r\n      day: persianDate.jd,\r\n      hour: dateTime.getHours(),\r\n      minute: dateTime.getMinutes(),\r\n      second: dateTime.getSeconds(),\r\n      millisecond: dateTime.getMilliseconds(),\r\n      dayOfWeek: dateTime.getDay(),\r\n    };\r\n  }\r\n  private static getDateTimeJsonPersian2(yearPersian: number, monthPersian: number, dayPersian: number, hour: number, minute: number, second: number): GetDateTimeJson1 {\r\n    if (!this.isNumber(hour)) hour = 0;\r\n    if (!this.isNumber(minute)) minute = 0;\r\n    if (!this.isNumber(second)) second = 0;\r\n    let gregorian = this.toGregorian(yearPersian, monthPersian, dayPersian);\r\n    return MdsPersianDateTimePicker.getDateTimeJsonPersian1(new Date(gregorian.gy, gregorian.gm - 1, gregorian.gd, hour, minute, second));\r\n  }\r\n  private static getWeekDayName(englishWeekDayIndex: number, isGregorian: boolean): string {\r\n    if (!isGregorian) return this.weekDayNamesPersian[englishWeekDayIndex];\r\n    return this.weekDayNames[englishWeekDayIndex];\r\n  }\r\n  private static getMonthName(monthIndex: number, isGregorian: boolean): string {\r\n    if (monthIndex < 0)\r\n      monthIndex = 11;\r\n    else if (monthIndex > 11)\r\n      monthIndex = 0;\r\n    if (!isGregorian) return this.monthNamesPersian[monthIndex];\r\n    return this.monthNames[monthIndex];\r\n  }\r\n  private static getWeekDayShortName(englishWeekDayIndex: number, isGregorian: boolean): string {\r\n    if (!isGregorian)\r\n      return this.shortDayNamesPersian[englishWeekDayIndex];\r\n    return this.shortDayNames[englishWeekDayIndex];\r\n  }\r\n  private static isLeapYear(persianYear: number): boolean {\r\n    return this.isLeapJalaliYear(persianYear);\r\n  }\r\n  private static getDaysInMonthPersian(year: number, month: number): number {\r\n    let numberOfDaysInMonth = 31;\r\n    if (month > 6 && month < 12)\r\n      numberOfDaysInMonth = 30;\r\n    else if (month == 12)\r\n      numberOfDaysInMonth = this.isLeapYear(year) ? 30 : 29;\r\n    return numberOfDaysInMonth;\r\n  }\r\n  private static getDaysInMonth(year: number, month: number): number {\r\n    return new Date(year, month + 1, 0).getDate();\r\n  }\r\n  private static getLastDayDateOfPreviousMonth(dateTime: Date, isGregorian: boolean): Date {\r\n    let dateTimeLocal = MdsPersianDateTimePicker.getClonedDate(dateTime);\r\n    if (isGregorian) {\r\n      let previousMonth = new Date(dateTimeLocal.getFullYear(), dateTimeLocal.getMonth() - 1, 1),\r\n        daysInMonth = MdsPersianDateTimePicker.getDaysInMonth(previousMonth.getFullYear(), previousMonth.getMonth());\r\n      return new Date(previousMonth.getFullYear(), previousMonth.getMonth(), daysInMonth);\r\n    }\r\n    let dateTimeJsonPersian = MdsPersianDateTimePicker.getDateTimeJsonPersian1(dateTimeLocal);\r\n    dateTimeJsonPersian.month += -1;\r\n    if (dateTimeJsonPersian.month <= 0) {\r\n      dateTimeJsonPersian.month = 12;\r\n      dateTimeJsonPersian.year--;\r\n    } else if (dateTimeJsonPersian.month > 12) {\r\n      dateTimeJsonPersian.year++;\r\n      dateTimeJsonPersian.month = 1;\r\n    }\r\n    return MdsPersianDateTimePicker.getDateTime1(dateTimeJsonPersian.year, dateTimeJsonPersian.month, MdsPersianDateTimePicker.getDaysInMonthPersian(dateTimeJsonPersian.year, dateTimeJsonPersian.month));\r\n  }\r\n  private static getFirstDayDateOfNextMonth(dateTime: Date, isGregorian: boolean): Date {\r\n    let dateTimeLocal = MdsPersianDateTimePicker.getClonedDate(dateTime);\r\n    if (isGregorian) {\r\n      let nextMonth = new Date(dateTimeLocal.getFullYear(), dateTimeLocal.getMonth() + 1, 1);\r\n      return new Date(nextMonth.getFullYear(), nextMonth.getMonth(), 1);\r\n    }\r\n    let dateTimeJsonPersian = MdsPersianDateTimePicker.getDateTimeJsonPersian1(dateTimeLocal);\r\n    dateTimeJsonPersian.month += 1;\r\n    if (dateTimeJsonPersian.month <= 0) {\r\n      dateTimeJsonPersian.month = 12;\r\n      dateTimeJsonPersian.year--;\r\n    }\r\n    if (dateTimeJsonPersian.month > 12) {\r\n      dateTimeJsonPersian.year++;\r\n      dateTimeJsonPersian.month = 1;\r\n    }\r\n    return MdsPersianDateTimePicker.getDateTime1(dateTimeJsonPersian.year, dateTimeJsonPersian.month, 1);\r\n  }\r\n  private static getDateTime1(yearPersian: number, monthPersian: number, dayPersian: number, hour?: number, minute?: number, second?: number): Date {\r\n    if (!this.isNumber(hour)) hour = 0;\r\n    if (!this.isNumber(minute)) minute = 0;\r\n    if (!this.isNumber(second)) second = 0;\r\n    let gregorian = this.toGregorian(yearPersian, monthPersian, dayPersian);\r\n    return new Date(gregorian.gy, gregorian.gm - 1, gregorian.gd, hour, minute, second);\r\n  }\r\n  private static getDateTime2(dateTimeJsonPersian: GetDateTimeJson1): Date {\r\n    if (!dateTimeJsonPersian.hour) dateTimeJsonPersian.hour = 0;\r\n    if (!dateTimeJsonPersian.minute) dateTimeJsonPersian.minute = 0;\r\n    if (!dateTimeJsonPersian.second) dateTimeJsonPersian.second = 0;\r\n    let gregorian = this.toGregorian(dateTimeJsonPersian.year, dateTimeJsonPersian.month, dateTimeJsonPersian.day);\r\n    return new Date(gregorian.gy, gregorian.gm - 1, gregorian.gd, dateTimeJsonPersian.hour, dateTimeJsonPersian.minute, dateTimeJsonPersian.second);\r\n  }\r\n  private static getDateTime3(dateTimeJson: GetDateTimeJson1): Date {\r\n    return new Date(dateTimeJson.year, dateTimeJson.month - 1, dateTimeJson.day, dateTimeJson.hour, dateTimeJson.minute, dateTimeJson.second);\r\n  }\r\n  private static getDateTime4(dateNumber: number, dateTime: Date, isGregorian: boolean): Date {\r\n    let dateTimeJson = MdsPersianDateTimePicker.getDateTimeJson2(dateNumber);\r\n    if (!isGregorian) {\r\n      let dateTimeJsonPersian = MdsPersianDateTimePicker.getDateTimeJsonPersian1(dateTime);\r\n      dateTimeJsonPersian.year = dateTimeJson.year;\r\n      dateTimeJsonPersian.month = dateTimeJson.month;\r\n      dateTimeJsonPersian.day = dateTimeJson.day;\r\n      dateTime = this.getDateTime2(dateTimeJsonPersian);\r\n    } else\r\n      dateTime = new Date(dateTimeJson.year, dateTimeJson.month - 1, dateTimeJson.day,\r\n        dateTime.getHours(), dateTime.getMinutes(), dateTime.getSeconds());\r\n    return dateTime;\r\n  }\r\n  private static getLesserDisableBeforeDate(setting: MdsPersianDateTimePickerSetting): GetDateTimeJson1 | null {\r\n    // دریافت تاریخ کوچکتر\r\n    // از بین تاریخ های غیر فعال شده در گذشته\r\n    let resultDate: Date | null = null;\r\n    const dateNow = new Date();\r\n    if (setting.disableBeforeToday && setting.disableBeforeDate) {\r\n      if (setting.disableBeforeDate.getTime() <= dateNow.getTime())\r\n        resultDate = MdsPersianDateTimePicker.getClonedDate(setting.disableBeforeDate);\r\n      else\r\n        resultDate = dateNow;\r\n    } else if (setting.disableBeforeDate)\r\n      resultDate = MdsPersianDateTimePicker.getClonedDate(setting.disableBeforeDate);\r\n    else if (setting.disableBeforeToday)\r\n      resultDate = dateNow;\r\n    if (resultDate == null)\r\n      return null;\r\n    if (setting.isGregorian)\r\n      return MdsPersianDateTimePicker.getDateTimeJson1(resultDate);\r\n    return MdsPersianDateTimePicker.getDateTimeJsonPersian1(resultDate);\r\n  }\r\n  private static getBiggerDisableAfterDate(setting: MdsPersianDateTimePickerSetting): GetDateTimeJson1 | null {\r\n    // دریافت تاریخ بزرگتر\r\n    // از بین تاریخ های غیر فعال شده در آینده\r\n    let resultDate: Date | null = null;\r\n    const dateNow = new Date();\r\n    if (setting.disableAfterDate && setting.disableAfterToday) {\r\n      if (setting.disableAfterDate.getTime() >= dateNow.getTime())\r\n        resultDate = MdsPersianDateTimePicker.getClonedDate(setting.disableAfterDate);\r\n      else\r\n        resultDate = dateNow;\r\n    } else if (setting.disableAfterDate)\r\n      resultDate = MdsPersianDateTimePicker.getClonedDate(setting.disableAfterDate);\r\n    else if (setting.disableAfterToday)\r\n      resultDate = dateNow;\r\n    if (resultDate == null)\r\n      return null;\r\n    if (setting.isGregorian)\r\n      return MdsPersianDateTimePicker.getDateTimeJson1(resultDate);\r\n    return MdsPersianDateTimePicker.getDateTimeJsonPersian1(resultDate);\r\n  }\r\n  private static addMonthToDateTimeJson(dateTimeJson: GetDateTimeJson1, addedMonth: number, isGregorian: boolean): GetDateTimeJson1 {\r\n    // وقتی نیاز هست تا ماه یا روز به تاریخی اضافه کنم\r\n    // پس از اضافه کردن ماه یا روز این متد را استفاده میکنم تا سال و ماه\r\n    // با مقادیر جدید تصحیح و برگشت داده شوند\r\n    const dateTimeJson1 = Object.assign({}, dateTimeJson);\r\n    dateTimeJson1.day = 1;\r\n    dateTimeJson1.month += addedMonth;\r\n    if (!isGregorian) {\r\n      if (dateTimeJson1.month <= 0) {\r\n        dateTimeJson1.month = 12;\r\n        dateTimeJson1.year--;\r\n      }\r\n      if (dateTimeJson1.month > 12) {\r\n        dateTimeJson1.year++;\r\n        dateTimeJson1.month = 1;\r\n      }\r\n      return dateTimeJson1;\r\n    }\r\n    return MdsPersianDateTimePicker.getDateTimeJson1(this.getDateTime3(dateTimeJson1));\r\n  }\r\n  private static convertToNumber1(dateTimeJson: GetDateTimeJson1): number {\r\n    return Number(MdsPersianDateTimePicker.zeroPad(dateTimeJson.year) + MdsPersianDateTimePicker.zeroPad(dateTimeJson.month) + MdsPersianDateTimePicker.zeroPad(dateTimeJson.day));\r\n  }\r\n  private static convertToNumber2(year: number, month: number, day: number): number {\r\n    return Number(MdsPersianDateTimePicker.zeroPad(year) + MdsPersianDateTimePicker.zeroPad(month) + MdsPersianDateTimePicker.zeroPad(day));\r\n  }\r\n  private static convertToNumber3(dateTime: Date): number {\r\n    return MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(dateTime));\r\n  }\r\n  private static correctOptionValue(optionName: string, value: any): any {\r\n    const setting = new MdsPersianDateTimePickerSetting();\r\n    Object.keys(setting).filter(key => key === optionName).forEach(key => {\r\n      switch (typeof (<any>setting)[key]) {\r\n        case 'number':\r\n          value = +value;\r\n          break;\r\n        case 'string':\r\n          value = value.toString();\r\n          break;\r\n        case 'boolean':\r\n          value = !!value;\r\n          break;\r\n        case 'object':\r\n          if ((<any>setting)[key] instanceof Date) {\r\n            value = new Date(value);\r\n          } else if (Array.isArray((<any>setting)[key])) {\r\n            switch (optionName) {\r\n              case 'holidays':\r\n              case 'disabledDates':\r\n              case 'specialDates':\r\n              case 'selectedRangeDate':\r\n                value.forEach((item: any, i: number) => {\r\n                  value[i] = new Date(item);\r\n                });\r\n                break;\r\n              case 'disabledDays':\r\n              case 'rangeSelectorMonthsToShow':\r\n                value.forEach((item: any, i: number) => {\r\n                  value[i] = +item;\r\n                });\r\n                break;\r\n            }\r\n          }\r\n          break;\r\n      }\r\n    });\r\n    return value;\r\n  }\r\n  private static getShortHour(hour: number): number {\r\n    let shortHour;\r\n    if (hour > 12)\r\n      shortHour = hour - 12;\r\n    else\r\n      shortHour = hour;\r\n    return shortHour;\r\n  }\r\n  private static getAmPm(hour: number, isGregorian: boolean): string {\r\n    let amPm;\r\n    if (hour > 12) {\r\n      if (isGregorian)\r\n        amPm = 'PM';\r\n      else\r\n        amPm = 'ب.ظ';\r\n    } else\r\n      if (isGregorian)\r\n        amPm = 'AM';\r\n      else\r\n        amPm = 'ق.ظ';\r\n    return amPm;\r\n  }\r\n  private static addMonthToDateTime(dateTime: Date, addedMonth: number, isGregorian: boolean): Date {\r\n    let dateTimeJson: GetDateTimeJson1;\r\n    if (!isGregorian) {\r\n      dateTimeJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(dateTime);\r\n      dateTimeJson = MdsPersianDateTimePicker.addMonthToDateTimeJson(dateTimeJson, addedMonth, isGregorian);\r\n      return this.getDateTime2(dateTimeJson);\r\n    }\r\n    dateTimeJson = MdsPersianDateTimePicker.getDateTimeJson1(dateTime);\r\n    dateTimeJson = MdsPersianDateTimePicker.addMonthToDateTimeJson(dateTimeJson, addedMonth, isGregorian);\r\n    return this.getDateTime3(dateTimeJson);\r\n  }\r\n  private static isNumber(n: any): boolean {\r\n    return !isNaN(parseFloat(n)) && isFinite(n);\r\n  }\r\n  private static toPersianNumber(inputNumber1: number | string): string {\r\n    /* ۰ ۱ ۲ ۳ ۴ ۵ ۶ ۷ ۸ ۹ */\r\n    if (!inputNumber1) return '';\r\n    let str1 = inputNumber1.toString().trim();\r\n    if (!str1) return '';\r\n    str1 = str1.replace(/0/img, '۰');\r\n    str1 = str1.replace(/1/img, '۱');\r\n    str1 = str1.replace(/2/img, '۲');\r\n    str1 = str1.replace(/3/img, '۳');\r\n    str1 = str1.replace(/4/img, '۴');\r\n    str1 = str1.replace(/5/img, '۵');\r\n    str1 = str1.replace(/6/img, '۶');\r\n    str1 = str1.replace(/7/img, '۷');\r\n    str1 = str1.replace(/8/img, '۸');\r\n    str1 = str1.replace(/9/img, '۹');\r\n    return str1;\r\n  }\r\n  private static toEnglishNumber(inputNumber1: number | string): string {\r\n    /* ۰ ۱ ۲ ۳ ۴ ۵ ۶ ۷ ۸ ۹ */\r\n    if (!inputNumber1) return '';\r\n    let str1 = inputNumber1.toString().trim();\r\n    if (!str1) return '';\r\n    str1 = str1.replace(/۰/img, '0');\r\n    str1 = str1.replace(/۱/img, '1');\r\n    str1 = str1.replace(/۲/img, '2');\r\n    str1 = str1.replace(/۳/img, '3');\r\n    str1 = str1.replace(/۴/img, '4');\r\n    str1 = str1.replace(/۵/img, '5');\r\n    str1 = str1.replace(/۶/img, '6');\r\n    str1 = str1.replace(/۷/img, '7');\r\n    str1 = str1.replace(/۸/img, '8');\r\n    str1 = str1.replace(/۹/img, '9');\r\n    return str1;\r\n  }\r\n  private static zeroPad(nr: any, base?: string): string {\r\n    if (nr == undefined || nr == '') return '00';\r\n    if (base == undefined || base == '') base = '00';\r\n    let len = (String(base).length - String(nr).length) + 1;\r\n    return len > 0 ? new Array(len).join('0') + nr : nr;\r\n  }\r\n  private static getDateTimeString(dateTimeJson: GetDateTimeJson1, format: string, isGregorian: boolean, persianNumber: boolean): string {\r\n\r\n    /// فرمت های که پشتیبانی می شوند\r\n    /// <para />\r\n    /// yyyy: سال چهار رقمی\r\n    /// <para />\r\n    /// yy: سال دو رقمی\r\n    /// <para />\r\n    /// MMMM: نام ماه\r\n    /// <para />\r\n    /// MM: عدد دو رقمی ماه\r\n    /// <para />\r\n    /// M: عدد یک رقمی ماه\r\n    /// <para />\r\n    /// dddd: نام روز هفته\r\n    /// <para />\r\n    /// dd: عدد دو رقمی روز ماه\r\n    /// <para />\r\n    /// d: عدد یک رقمی روز ماه\r\n    /// <para />\r\n    /// HH: ساعت دو رقمی با فرمت 00 تا 24\r\n    /// <para />\r\n    /// H: ساعت یک رقمی با فرمت 0 تا 24\r\n    /// <para />\r\n    /// hh: ساعت دو رقمی با فرمت 00 تا 12\r\n    /// <para />\r\n    /// h: ساعت یک رقمی با فرمت 0 تا 12\r\n    /// <para />\r\n    /// mm: عدد دو رقمی دقیقه\r\n    /// <para />\r\n    /// m: عدد یک رقمی دقیقه\r\n    /// <para />\r\n    /// ss: ثانیه دو رقمی\r\n    /// <para />\r\n    /// s: ثانیه یک رقمی\r\n    /// <para />\r\n    /// fff: میلی ثانیه 3 رقمی\r\n    /// <para />\r\n    /// ff: میلی ثانیه 2 رقمی\r\n    /// <para />\r\n    /// f: میلی ثانیه یک رقمی\r\n    /// <para />\r\n    /// tt: ب.ظ یا ق.ظ\r\n    /// <para />\r\n    /// t: حرف اول از ب.ظ یا ق.ظ\r\n\r\n    format = format.replace(/yyyy/mg, dateTimeJson.year.toString());\r\n    format = format.replace(/yy/mg, (dateTimeJson.year % 100).toString());\r\n    format = format.replace(/MMMM/mg, MdsPersianDateTimePicker.getMonthName(dateTimeJson.month - 1, isGregorian));\r\n    format = format.replace(/MM/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.month));\r\n    format = format.replace(/M/mg, dateTimeJson.month.toString());\r\n    format = format.replace(/dddd/mg, MdsPersianDateTimePicker.getWeekDayName(dateTimeJson.dayOfWeek, isGregorian));\r\n    format = format.replace(/dd/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.day));\r\n    format = format.replace(/d/mg, dateTimeJson.day.toString());\r\n    format = format.replace(/HH/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.hour));\r\n    format = format.replace(/H/mg, dateTimeJson.hour.toString());\r\n    format = format.replace(/hh/mg, MdsPersianDateTimePicker.zeroPad(this.getShortHour(dateTimeJson.hour).toString()));\r\n    format = format.replace(/h/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.hour));\r\n    format = format.replace(/mm/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.minute));\r\n    format = format.replace(/m/mg, dateTimeJson.minute.toString());\r\n    format = format.replace(/ss/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.second));\r\n    format = format.replace(/s/mg, dateTimeJson.second.toString());\r\n    format = format.replace(/fff/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.millisecond, '000'));\r\n    format = format.replace(/ff/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.millisecond / 10));\r\n    format = format.replace(/f/mg, (dateTimeJson.millisecond / 100).toString());\r\n    format = format.replace(/tt/mg, this.getAmPm(dateTimeJson.hour, isGregorian));\r\n    format = format.replace(/t/mg, this.getAmPm(dateTimeJson.hour, isGregorian)[0]);\r\n\r\n    if (persianNumber)\r\n      format = MdsPersianDateTimePicker.toPersianNumber(format);\r\n    return format;\r\n  }\r\n  private static getSelectedDateTimeTextFormatted(setting: MdsPersianDateTimePickerSetting): string {\r\n    if (setting.selectedDate == undefined) return '';\r\n    if (!setting.enableTimePicker) {\r\n      setting.selectedDate.setHours(0);\r\n      setting.selectedDate.setMinutes(0);\r\n      setting.selectedDate.setSeconds(0);\r\n    }\r\n    if (setting.rangeSelector && setting.rangeSelectorStartDate != undefined && setting.rangeSelectorEndDate != undefined)\r\n      return MdsPersianDateTimePicker.getDateTimeString(!setting.isGregorian ? MdsPersianDateTimePicker.getDateTimeJsonPersian1(setting.rangeSelectorStartDate) : MdsPersianDateTimePicker.getDateTimeJson1(setting.rangeSelectorStartDate), setting.textFormat, setting.isGregorian, setting.persianNumber) + ' - ' +\r\n        MdsPersianDateTimePicker.getDateTimeString(!setting.isGregorian ? MdsPersianDateTimePicker.getDateTimeJsonPersian1(setting.rangeSelectorEndDate) : MdsPersianDateTimePicker.getDateTimeJson1(setting.rangeSelectorEndDate), setting.textFormat, setting.isGregorian, setting.persianNumber);\r\n    return MdsPersianDateTimePicker.getDateTimeString(!setting.isGregorian ? MdsPersianDateTimePicker.getDateTimeJsonPersian1(setting.selectedDate) : MdsPersianDateTimePicker.getDateTimeJson1(setting.selectedDate), setting.textFormat, setting.isGregorian, setting.persianNumber);\r\n  }\r\n  private static getSelectedDateFormatted(setting: MdsPersianDateTimePickerSetting): string {\r\n    // دریافت رشته تاریخ انتخاب شده\r\n    if ((!setting.rangeSelector && !setting.selectedDate) ||\r\n      (setting.rangeSelector && !setting.rangeSelectorStartDate && !setting.rangeSelectorEndDate))\r\n      return '';\r\n    if (setting.rangeSelector)\r\n      return MdsPersianDateTimePicker.getDateTimeString(MdsPersianDateTimePicker.getDateTimeJson1(setting.rangeSelectorStartDate!), setting.dateFormat, true, setting.persianNumber) + ' - ' +\r\n        MdsPersianDateTimePicker.getDateTimeString(MdsPersianDateTimePicker.getDateTimeJson1(setting.rangeSelectorEndDate!), setting.dateFormat, true, setting.persianNumber);\r\n    return MdsPersianDateTimePicker.getDateTimeString(MdsPersianDateTimePicker.getDateTimeJson1(setting.selectedDate!), setting.dateFormat, true, setting.persianNumber);\r\n  }\r\n  private static getDisabledDateObject(setting: MdsPersianDateTimePickerSetting): [GetDateTimeJson1 | null, GetDateTimeJson1 | null] {\r\n    let disableBeforeDateTimeJson = this.getLesserDisableBeforeDate(setting);\r\n    let disableAfterDateTimeJson = this.getBiggerDisableAfterDate(setting);\r\n    // بررسی پراپرتی های از تاریخ، تا تاریخ\r\n    if ((setting.fromDate || setting.toDate) && setting.groupId) {\r\n      const toDateElement = document.querySelector(`[data-mds-dtp-group=\"${setting.groupId}\"][data-to-date]`);\r\n      const fromDateElement = document.querySelector(`[data-mds-dtp-group=\"${setting.groupId}\"][data-from-date]`);\r\n      if (toDateElement != null && setting.fromDate) {\r\n        const toDateSetting = MdsPersianDateTimePicker.getInstance(toDateElement)?.setting;\r\n        const toDateSelectedDate = !toDateSetting ? null : toDateSetting.selectedDate;\r\n        disableAfterDateTimeJson = !toDateSelectedDate ? null : setting.isGregorian ? MdsPersianDateTimePicker.getDateTimeJson1(toDateSelectedDate) : MdsPersianDateTimePicker.getDateTimeJsonPersian1(toDateSelectedDate);\r\n      } else if (fromDateElement != null && setting.toDate) {\r\n        const fromDateSetting = MdsPersianDateTimePicker.getInstance(fromDateElement)?.setting;\r\n        const fromDateSelectedDate = !fromDateSetting ? null : fromDateSetting.selectedDate;\r\n        disableBeforeDateTimeJson = !fromDateSelectedDate ? null : setting.isGregorian ? MdsPersianDateTimePicker.getDateTimeJson1(fromDateSelectedDate) : MdsPersianDateTimePicker.getDateTimeJsonPersian1(fromDateSelectedDate);\r\n      }\r\n    }\r\n    return [disableBeforeDateTimeJson, disableAfterDateTimeJson];\r\n  }\r\n  private static setSelectedData(setting: MdsPersianDateTimePickerSetting): void {\r\n    const targetTextElement = setting.targetTextSelector ? document.querySelector(setting.targetTextSelector) : undefined;\r\n    const targetDateElement = setting.targetDateSelector ? document.querySelector(setting.targetDateSelector) : undefined;\r\n    const changeEvent = new Event('change');\r\n    if (targetTextElement != undefined) {\r\n      const dateTimeTextFormat = this.getSelectedDateTimeTextFormatted(setting);\r\n      switch (targetTextElement.tagName.toLowerCase()) {\r\n        case 'input':\r\n          (<any>targetTextElement).value = dateTimeTextFormat;\r\n          break;\r\n        default:\r\n          targetTextElement.innerHTML = dateTimeTextFormat;\r\n          break;\r\n      }\r\n      targetTextElement.dispatchEvent(changeEvent);\r\n    }\r\n    if (targetDateElement != undefined) {\r\n      const dateTimeFormat = this.toEnglishNumber(this.getSelectedDateFormatted(setting));\r\n      switch (targetDateElement.tagName.toLowerCase()) {\r\n        case 'input':\r\n          (<any>targetDateElement).value = dateTimeFormat;\r\n          break;\r\n        default:\r\n          targetDateElement.innerHTML = dateTimeFormat;\r\n          break;\r\n      }\r\n      targetDateElement.dispatchEvent(changeEvent);\r\n    }\r\n  }\r\n  private getPopover(element: Element): Element | null {\r\n    let popoverId = element.getAttribute('aria-describedby');\r\n    if (popoverId == undefined || popoverId == '')\r\n      return element.closest('[data-mds-dtp]');\r\n    return document.getElementById(popoverId.toString());\r\n  }\r\n  private getModal(): Element | null {\r\n    return document.querySelector(`.modal[data-mds-dtp-guid=\"${this.guid}\"]`);\r\n  }\r\n  private setModalHtml(title: string, datePickerBodyHtml: string, setting: MdsPersianDateTimePickerSetting): void {\r\n    const prevModalElement = this.getModal();\r\n    if (prevModalElement == null) {\r\n      let modalHtml = MdsPersianDateTimePicker.modalHtmlTemplate;\r\n      modalHtml = modalHtml.replace(/\\{\\{guid\\}\\}/img, this.guid);\r\n      const tempDiv = document.createElement('div');\r\n      tempDiv.innerHTML = modalHtml;\r\n      tempDiv.querySelector('[data-mds-dtp-title] .modal-title')!.innerHTML = title;\r\n      tempDiv.querySelector('[data-name=\"mds-dtp-body\"]')!.innerHTML = datePickerBodyHtml;\r\n      document.querySelector('body')!.appendChild(tempDiv);\r\n    } else {\r\n      prevModalElement.querySelector('[data-mds-dtp-title] .modal-title')!.innerHTML = title;\r\n      prevModalElement.querySelector('[data-name=\"mds-dtp-body\"]')!.innerHTML = datePickerBodyHtml;\r\n    }\r\n    const modalDialogElement = document.querySelector(`[data-mds-dtp-guid=\"${this.guid}\"] .modal-dialog`);\r\n    if (modalDialogElement != null) {\r\n      if (setting.rangeSelector) {\r\n        if (setting.rangeSelectorMonthsToShow[0] > 0 || setting.rangeSelectorMonthsToShow[1] > 0)\r\n          modalDialogElement.classList.add('modal-xl');\r\n        else\r\n          modalDialogElement.classList.remove('modal-xl');\r\n      } else {\r\n        modalDialogElement.classList.remove('modal-xl');\r\n      }\r\n    } else {\r\n      console.warn(\"mds.bs.datetimepicker: element with `data-mds-dtp-guid` selector not found !\")\r\n    }\r\n  }\r\n  private getYearsBoxBodyHtml(setting: MdsPersianDateTimePickerSetting, yearToStart: number): MdsPersianDateTimePickerYearToSelect {\r\n    // بدست آوردن اچ تی ام ال انتخاب سال\r\n    // yearToStart سال شروع\r\n\r\n    setting.yearOffset = Number(setting.yearOffset);\r\n\r\n    const selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(setting.selectedDateToShow);\r\n    const disabledDateObj = MdsPersianDateTimePicker.getDisabledDateObject(setting);\r\n    const disableBeforeDateTimeJson = disabledDateObj[0];\r\n    const disableAfterDateTimeJson = disabledDateObj[1];\r\n    let html = MdsPersianDateTimePicker.dateTimePickerYearsToSelectHtmlTemplate;\r\n    let yearsBoxHtml = '';\r\n    let todayDateTimeJson: GetDateTimeJson1;\r\n    let selectedDateTimeToShowJson: GetDateTimeJson1;\r\n    let counter = 1;\r\n\r\n    if (setting.isGregorian) {\r\n      selectedDateTimeToShowJson = MdsPersianDateTimePicker.getDateTimeJson1(selectedDateToShow);\r\n      todayDateTimeJson = MdsPersianDateTimePicker.getDateTimeJson1(new Date());\r\n    } else {\r\n      selectedDateTimeToShowJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(selectedDateToShow);\r\n      todayDateTimeJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(new Date());\r\n    }\r\n    counter = 1;\r\n    const yearStart = yearToStart ? yearToStart : todayDateTimeJson.year - setting.yearOffset;\r\n    const yearEnd = yearToStart ? yearToStart + setting.yearOffset * 2 : todayDateTimeJson.year + setting.yearOffset;\r\n    for (let i = yearStart; i < yearEnd; i++) {\r\n      let disabledAttr = '';\r\n      if (disableBeforeDateTimeJson != null) {\r\n        disabledAttr = i < disableBeforeDateTimeJson.year ? 'disabled' : '';\r\n      }\r\n      if (!disabledAttr && disableAfterDateTimeJson != null) {\r\n        disabledAttr = i > disableAfterDateTimeJson.year ? 'disabled' : '';\r\n      }\r\n      let currentYearDateTimeJson = MdsPersianDateTimePicker.getDateTimeJson2(MdsPersianDateTimePicker.convertToNumber2(i, selectedDateTimeToShowJson.month, MdsPersianDateTimePicker.getDaysInMonthPersian(i, selectedDateTimeToShowJson.month)));\r\n      let currentYearDisabledAttr = '';\r\n      let yearText = setting.isGregorian ? i.toString() : MdsPersianDateTimePicker.toPersianNumber(i);\r\n      let yearDateNumber = MdsPersianDateTimePicker.convertToNumber2(i, selectedDateTimeToShowJson.month, 1);\r\n      let todayAttr = todayDateTimeJson.year == i ? 'data-current-year=\"true\"' : ''\r\n      let selectedYearAttr = selectedDateTimeToShowJson.year == i ? 'data-selected-year' : ''\r\n      let selectedYearTitle = '';\r\n      if (todayAttr)\r\n        selectedYearTitle = setting.isGregorian ? MdsPersianDateTimePicker.currentYearText : MdsPersianDateTimePicker.currentYearTextPersian;\r\n      if (disableBeforeDateTimeJson != undefined && disableBeforeDateTimeJson.year != undefined && currentYearDateTimeJson.year < disableBeforeDateTimeJson.year)\r\n        currentYearDisabledAttr = 'disabled';\r\n      if (disableAfterDateTimeJson != undefined && disableAfterDateTimeJson.year != undefined && currentYearDateTimeJson.year > disableAfterDateTimeJson.year)\r\n        currentYearDisabledAttr = 'disabled';\r\n      if (setting.disableBeforeToday && currentYearDateTimeJson.year < todayDateTimeJson.year)\r\n        currentYearDisabledAttr = 'disabled';\r\n      if (setting.disableAfterToday && currentYearDateTimeJson.year > todayDateTimeJson.year)\r\n        currentYearDisabledAttr = 'disabled';\r\n      if (counter == 1) yearsBoxHtml += '<tr>';\r\n      yearsBoxHtml += `\r\n<td class=\"text-center\" title=\"${selectedYearTitle}\" ${todayAttr} ${selectedYearAttr}>\r\n  <button class=\"btn btn-sm btn-light w-100\" type=\"button\" data-change-date-button=\"true\" data-number=\"${yearDateNumber}\" ${currentYearDisabledAttr} ${disabledAttr}>${yearText}</button>\r\n</td>\r\n`;\r\n      if (counter == 5) yearsBoxHtml += '</tr>';\r\n      counter++;\r\n      if (counter > 5) counter = 1;\r\n    }\r\n    html = html.replace(/\\{\\{yearsBoxHtml\\}\\}/img, yearsBoxHtml);\r\n    html = html.replace(/\\{\\{cancelText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.cancelText : MdsPersianDateTimePicker.cancelTextPersian);\r\n    if (setting.inLine && setting.yearOffset > 15)\r\n      html += '<div style=\"height: 30px;\"></div>';\r\n    return {\r\n      yearStart,\r\n      yearEnd,\r\n      html\r\n    };\r\n  }\r\n  private getYearsBoxHeaderHtml(setting: MdsPersianDateTimePickerSetting, yearStart: number, yearEnd: number): string {\r\n    const yearsRangeText = ` ${yearStart} - ${yearEnd - 1} `;\r\n    const disabledDateObj = MdsPersianDateTimePicker.getDisabledDateObject(setting);\r\n    let html = MdsPersianDateTimePicker.popoverHeaderSelectYearHtmlTemplate;\r\n    html = html.replace(/\\{{rtlCssClass\\}\\}/img, setting.isGregorian ? '' : 'rtl');\r\n    html = html.replace(/\\{{dirAttrValue\\}\\}/img, setting.isGregorian ? 'ltr' : 'rtl');\r\n    html = html.replace(/\\{\\{yearsRangeText\\}\\}/img, setting.isGregorian ? yearsRangeText : MdsPersianDateTimePicker.toPersianNumber(yearsRangeText));\r\n    html = html.replace(/\\{\\{previousText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.previousText : MdsPersianDateTimePicker.previousTextPersian);\r\n    html = html.replace(/\\{\\{nextText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.nextText : MdsPersianDateTimePicker.nextTextPersian);\r\n    html = html.replace(/\\{\\{latestPreviousYear\\}\\}/img, yearStart > yearEnd ? yearEnd.toString() : yearStart.toString());\r\n    html = html.replace(/\\{\\{latestNextYear\\}\\}/img, yearStart > yearEnd ? yearStart.toString() : yearEnd.toString());\r\n    html = html.replace(/\\{\\{prevYearButtonAttr\\}\\}/img, disabledDateObj[0] != null && yearStart - 1 < disabledDateObj[0].year ? 'disabled' : '');\r\n    html = html.replace(/\\{\\{nextYearButtonAttr\\}\\}/img, disabledDateObj[1] != null && yearEnd + 1 > disabledDateObj[1].year ? 'disabled' : '');\r\n    return html;\r\n  }\r\n  private getDateTimePickerMonthHtml(setting: MdsPersianDateTimePickerSetting, isNextMonth: boolean, isPrevMonth: boolean): string {\r\n    let selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(setting.selectedDateToShow);\r\n    let selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n    let selectedDateTime = setting.selectedDate != undefined ? MdsPersianDateTimePicker.getClonedDate(setting.selectedDate) : undefined;\r\n    let isNextOrPrevMonth = isNextMonth || isPrevMonth;\r\n    let html = MdsPersianDateTimePicker.dateTimePickerMonthTableHtmlTemplate;\r\n\r\n    html = html.replace(/\\{\\{guid\\}\\}/img, this.guid);\r\n    html = html.replace(/\\{\\{monthTdAttribute\\}\\}/img, isNextMonth ? 'data-next-month' : isPrevMonth ? 'data-prev-month' : '');\r\n    html = html.replace(/\\{\\{monthNameAttribute\\}\\}/img, !isNextOrPrevMonth ? 'hidden' : '');\r\n    html = html.replace(/\\{\\{theadSelectDateButtonTrAttribute\\}\\}/img, !isNextOrPrevMonth ? '' : 'hidden');\r\n    html = html.replace(/\\{\\{weekDayShortName1CssClass\\}\\}/img, setting.isGregorian ? 'text-danger' : '');\r\n    html = html.replace(/\\{\\{weekDayShortName7CssClass\\}\\}/img, !setting.isGregorian ? 'text-danger' : '');\r\n    html = html.replace(/\\{\\{previousYearText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.previousYearText : MdsPersianDateTimePicker.previousYearTextPersian);\r\n    html = html.replace(/\\{\\{previousMonthText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.previousMonthText : MdsPersianDateTimePicker.previousMonthTextPersian);\r\n    html = html.replace(/\\{\\{nextMonthText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.nextMonthText : MdsPersianDateTimePicker.nextMonthTextPersian);\r\n    html = html.replace(/\\{\\{nextYearText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.nextYearText : MdsPersianDateTimePicker.nextYearTextPersian);\r\n    html = html.replace(/\\{\\{monthName1\\}\\}/img, MdsPersianDateTimePicker.getMonthName(0, setting.isGregorian));\r\n    html = html.replace(/\\{\\{monthName2\\}\\}/img, MdsPersianDateTimePicker.getMonthName(1, setting.isGregorian));\r\n    html = html.replace(/\\{\\{monthName3\\}\\}/img, MdsPersianDateTimePicker.getMonthName(2, setting.isGregorian));\r\n    html = html.replace(/\\{\\{monthName4\\}\\}/img, MdsPersianDateTimePicker.getMonthName(3, setting.isGregorian));\r\n    html = html.replace(/\\{\\{monthName5\\}\\}/img, MdsPersianDateTimePicker.getMonthName(4, setting.isGregorian));\r\n    html = html.replace(/\\{\\{monthName6\\}\\}/img, MdsPersianDateTimePicker.getMonthName(5, setting.isGregorian));\r\n    html = html.replace(/\\{\\{monthName7\\}\\}/img, MdsPersianDateTimePicker.getMonthName(6, setting.isGregorian));\r\n    html = html.replace(/\\{\\{monthName8\\}\\}/img, MdsPersianDateTimePicker.getMonthName(7, setting.isGregorian));\r\n    html = html.replace(/\\{\\{monthName9\\}\\}/img, MdsPersianDateTimePicker.getMonthName(8, setting.isGregorian));\r\n    html = html.replace(/\\{\\{monthName10\\}\\}/img, MdsPersianDateTimePicker.getMonthName(9, setting.isGregorian));\r\n    html = html.replace(/\\{\\{monthName11\\}\\}/img, MdsPersianDateTimePicker.getMonthName(10, setting.isGregorian));\r\n    html = html.replace(/\\{\\{monthName12\\}\\}/img, MdsPersianDateTimePicker.getMonthName(11, setting.isGregorian));\r\n    html = html.replace(/\\{\\{weekDayShortName1\\}\\}/img, MdsPersianDateTimePicker.getWeekDayShortName(0, setting.isGregorian));\r\n    html = html.replace(/\\{\\{weekDayShortName2\\}\\}/img, MdsPersianDateTimePicker.getWeekDayShortName(1, setting.isGregorian));\r\n    html = html.replace(/\\{\\{weekDayShortName3\\}\\}/img, MdsPersianDateTimePicker.getWeekDayShortName(2, setting.isGregorian));\r\n    html = html.replace(/\\{\\{weekDayShortName4\\}\\}/img, MdsPersianDateTimePicker.getWeekDayShortName(3, setting.isGregorian));\r\n    html = html.replace(/\\{\\{weekDayShortName5\\}\\}/img, MdsPersianDateTimePicker.getWeekDayShortName(4, setting.isGregorian));\r\n    html = html.replace(/\\{\\{weekDayShortName6\\}\\}/img, MdsPersianDateTimePicker.getWeekDayShortName(5, setting.isGregorian));\r\n    html = html.replace(/\\{\\{weekDayShortName7\\}\\}/img, MdsPersianDateTimePicker.getWeekDayShortName(6, setting.isGregorian));\r\n\r\n    const disabledDateObj = MdsPersianDateTimePicker.getDisabledDateObject(setting);\r\n    let i = 0,\r\n      j = 0,\r\n      firstWeekDayNumber,\r\n      cellNumber = 0,\r\n      tdNumber = 0,\r\n      selectedDateNumber = 0,\r\n      selectedMonthName = '',\r\n      todayDateTimeJson: GetDateTimeJson1, // year, month, day, hour, minute, second\r\n      dateTimeToShowJson: GetDateTimeJson1, // year, month, day, hour, minute, second\r\n      numberOfDaysInCurrentMonth = 0,\r\n      numberOfDaysInPreviousMonth = 0,\r\n      tr = document.createElement('TR'),\r\n      td = document.createElement(\"TD\"),\r\n      daysHtml = '',\r\n      currentDateNumber = 0,\r\n      previousMonthDateNumber = 0,\r\n      nextMonthDateNumber = 0,\r\n      previousYearDateNumber = 0,\r\n      nextYearDateNumber = 0,\r\n      rangeSelectorStartDate = !setting.rangeSelector || setting.rangeSelectorStartDate == undefined ? undefined : MdsPersianDateTimePicker.getClonedDate(setting.rangeSelectorStartDate),\r\n      rangeSelectorEndDate = !setting.rangeSelector || setting.rangeSelectorEndDate == undefined ? undefined : MdsPersianDateTimePicker.getClonedDate(setting.rangeSelectorEndDate),\r\n      rangeSelectorStartDateNumber = 0,\r\n      rangeSelectorEndDateNumber = 0,\r\n      dayNumberInString = '0',\r\n      dayOfWeek = '', // نام روز هفته\r\n      monthsDateNumberAndAttr: any = {\r\n        month1DateNumber: 0,\r\n        month2DateNumber: 0,\r\n        month3DateNumber: 0,\r\n        month4DateNumber: 0,\r\n        month5DateNumber: 0,\r\n        month6DateNumber: 0,\r\n        month7DateNumber: 0,\r\n        month8DateNumber: 0,\r\n        month9DateNumber: 0,\r\n        month10DateNumber: 0,\r\n        month11DateNumber: 0,\r\n        month12DateNumber: 0,\r\n        selectMonth1ButtonCssClass: '',\r\n        selectMonth2ButtonCssClass: '',\r\n        selectMonth3ButtonCssClass: '',\r\n        selectMonth4ButtonCssClass: '',\r\n        selectMonth5ButtonCssClass: '',\r\n        selectMonth6ButtonCssClass: '',\r\n        selectMonth7ButtonCssClass: '',\r\n        selectMonth8ButtonCssClass: '',\r\n        selectMonth9ButtonCssClass: '',\r\n        selectMonth10ButtonCssClass: '',\r\n        selectMonth11ButtonCssClass: '',\r\n        selectMonth12ButtonCssClass: '',\r\n      },\r\n      holidaysDateNumbers: number[] = [],\r\n      disabledDatesNumber: number[] = [],\r\n      specialDatesNumber: number[] = [],\r\n      disableBeforeDateTimeJson = disabledDateObj[0],\r\n      disableAfterDateTimeJson = disabledDateObj[1],\r\n      previousYearButtonDisabledAttribute = '',\r\n      previousMonthButtonDisabledAttribute = '',\r\n      selectYearButtonDisabledAttribute = '',\r\n      nextMonthButtonDisabledAttribute = '',\r\n      nextYearButtonDisabledAttribute = '',\r\n      isTrAppended = false;\r\n\r\n    if (setting.isGregorian) {\r\n      dateTimeToShowJson = MdsPersianDateTimePicker.getDateTimeJson1(selectedDateToShowTemp);\r\n      todayDateTimeJson = MdsPersianDateTimePicker.getDateTimeJson1(new Date());\r\n      firstWeekDayNumber = new Date(dateTimeToShowJson.year, dateTimeToShowJson.month - 1, 1).getDay();\r\n      selectedDateNumber = !selectedDateTime ? 0 : MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(selectedDateTime));\r\n      numberOfDaysInCurrentMonth = MdsPersianDateTimePicker.getDaysInMonth(dateTimeToShowJson.year, dateTimeToShowJson.month - 1);\r\n      numberOfDaysInPreviousMonth = MdsPersianDateTimePicker.getDaysInMonth(dateTimeToShowJson.year, dateTimeToShowJson.month - 2);\r\n      previousMonthDateNumber = MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(MdsPersianDateTimePicker.getLastDayDateOfPreviousMonth(selectedDateToShowTemp, true)));\r\n      nextMonthDateNumber = MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(MdsPersianDateTimePicker.getFirstDayDateOfNextMonth(selectedDateToShowTemp, true)));\r\n      selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n      previousYearDateNumber = MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(new Date(selectedDateToShowTemp.setFullYear(selectedDateToShowTemp.getFullYear() - 1))));\r\n      selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n      nextYearDateNumber = MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(new Date(selectedDateToShowTemp.setFullYear(selectedDateToShowTemp.getFullYear() + 1))));\r\n      selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n      rangeSelectorStartDateNumber = !setting.rangeSelector || !rangeSelectorStartDate ? 0 : MdsPersianDateTimePicker.convertToNumber3(rangeSelectorStartDate);\r\n      rangeSelectorEndDateNumber = !setting.rangeSelector || !rangeSelectorEndDate ? 0 : MdsPersianDateTimePicker.convertToNumber3(rangeSelectorEndDate);\r\n      for (i = 1; i <= 12; i++) {\r\n        monthsDateNumberAndAttr['month' + i.toString() + 'DateNumber'] = MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(new Date(selectedDateToShowTemp.setMonth(i - 1))));\r\n        selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n      }\r\n      for (i = 0; i < setting.holidays.length; i++) {\r\n        holidaysDateNumbers.push(MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(setting.holidays[i])));\r\n      }\r\n      for (i = 0; i < setting.disabledDates.length; i++) {\r\n        disabledDatesNumber.push(MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(setting.disabledDates[i])));\r\n      }\r\n      for (i = 0; i < setting.specialDates.length; i++) {\r\n        specialDatesNumber.push(MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(setting.specialDates[i])));\r\n      }\r\n    } else {\r\n      dateTimeToShowJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(selectedDateToShowTemp);\r\n      todayDateTimeJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(new Date());\r\n      firstWeekDayNumber = MdsPersianDateTimePicker.getDateTimeJsonPersian2(dateTimeToShowJson.year, dateTimeToShowJson.month, 1, 0, 0, 0).dayOfWeek;\r\n      selectedDateNumber = !selectedDateTime ? 0 : MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(selectedDateTime));\r\n      numberOfDaysInCurrentMonth = MdsPersianDateTimePicker.getDaysInMonthPersian(dateTimeToShowJson.year, dateTimeToShowJson.month);\r\n      numberOfDaysInPreviousMonth = MdsPersianDateTimePicker.getDaysInMonthPersian(dateTimeToShowJson.year - 1, dateTimeToShowJson.month - 1);\r\n      previousMonthDateNumber = MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(MdsPersianDateTimePicker.getLastDayDateOfPreviousMonth(selectedDateToShowTemp, false)));\r\n      selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n      nextMonthDateNumber = MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(MdsPersianDateTimePicker.getFirstDayDateOfNextMonth(selectedDateToShowTemp, false)));\r\n      selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n      previousYearDateNumber = MdsPersianDateTimePicker.convertToNumber2(dateTimeToShowJson.year - 1, dateTimeToShowJson.month, dateTimeToShowJson.day);\r\n      nextYearDateNumber = MdsPersianDateTimePicker.convertToNumber2(dateTimeToShowJson.year + 1, dateTimeToShowJson.month, dateTimeToShowJson.day);\r\n      selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n      rangeSelectorStartDateNumber = !setting.rangeSelector || !rangeSelectorStartDate ? 0 : MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(rangeSelectorStartDate));\r\n      rangeSelectorEndDateNumber = !setting.rangeSelector || !rangeSelectorEndDate ? 0 : MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(rangeSelectorEndDate));\r\n      for (i = 1; i <= 12; i++) {\r\n        monthsDateNumberAndAttr['month' + i.toString() + 'DateNumber'] = MdsPersianDateTimePicker.convertToNumber2(dateTimeToShowJson.year, i, MdsPersianDateTimePicker.getDaysInMonthPersian(dateTimeToShowJson.year, i));\r\n        selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n      }\r\n      for (i = 0; i < setting.holidays.length; i++) {\r\n        holidaysDateNumbers.push(MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(setting.holidays[i])));\r\n      }\r\n      for (i = 0; i < setting.disabledDates.length; i++) {\r\n        disabledDatesNumber.push(MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(setting.disabledDates[i])));\r\n      }\r\n      for (i = 0; i < setting.specialDates.length; i++) {\r\n        specialDatesNumber.push(MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(setting.specialDates[i])));\r\n      }\r\n    }\r\n\r\n    let todayDateNumber = MdsPersianDateTimePicker.convertToNumber1(todayDateTimeJson);\r\n    let selectedYear = setting.isGregorian ? dateTimeToShowJson.year.toString() : MdsPersianDateTimePicker.toPersianNumber(dateTimeToShowJson.year);\r\n    let disableBeforeDateTimeNumber = !disableBeforeDateTimeJson ? undefined : MdsPersianDateTimePicker.convertToNumber1(disableBeforeDateTimeJson);\r\n    let disableAfterDateTimeNumber = !disableAfterDateTimeJson ? undefined : MdsPersianDateTimePicker.convertToNumber1(disableAfterDateTimeJson);\r\n    let currentMonthInfo = MdsPersianDateTimePicker.getMonthName(dateTimeToShowJson.month - 1, setting.isGregorian) + ' ' + dateTimeToShowJson.year.toString();\r\n    if (!setting.isGregorian)\r\n      currentMonthInfo = MdsPersianDateTimePicker.toPersianNumber(currentMonthInfo);\r\n    selectedMonthName = MdsPersianDateTimePicker.getMonthName(dateTimeToShowJson.month - 1, setting.isGregorian);\r\n\r\n    if (setting.yearOffset <= 0) {\r\n      previousYearButtonDisabledAttribute = 'disabled';\r\n      nextYearButtonDisabledAttribute = 'disabled';\r\n      selectYearButtonDisabledAttribute = 'disabled';\r\n    }\r\n\r\n    // روز های ماه قبل\r\n    if (!setting.isGregorian && firstWeekDayNumber != 6 || setting.isGregorian && firstWeekDayNumber != 0) {\r\n      if (setting.isGregorian)\r\n        firstWeekDayNumber--;\r\n      let previousMonthDateTimeJson = MdsPersianDateTimePicker.addMonthToDateTimeJson(dateTimeToShowJson, -1, setting.isGregorian);\r\n      for (i = numberOfDaysInPreviousMonth - firstWeekDayNumber; i <= numberOfDaysInPreviousMonth; i++) {\r\n        currentDateNumber = MdsPersianDateTimePicker.convertToNumber2(previousMonthDateTimeJson.year, previousMonthDateTimeJson.month, i);\r\n        dayNumberInString = setting.isGregorian ? MdsPersianDateTimePicker.zeroPad(i) : MdsPersianDateTimePicker.toPersianNumber(MdsPersianDateTimePicker.zeroPad(i));\r\n        td = document.createElement('TD');\r\n        td.setAttribute('data-nm', '');\r\n        td.setAttribute('data-number', currentDateNumber.toString());\r\n        td.innerHTML = dayNumberInString;\r\n        if (setting.rangeSelector) {\r\n          if (currentDateNumber == rangeSelectorStartDateNumber || currentDateNumber == rangeSelectorEndDateNumber)\r\n            td.classList.add('selected-range-days-start-end');\r\n          else if (rangeSelectorStartDateNumber > 0 && rangeSelectorEndDateNumber > 0 && currentDateNumber > rangeSelectorStartDateNumber && currentDateNumber < rangeSelectorEndDateNumber)\r\n            td.classList.add('selected-range-days-nm');\r\n        }\r\n        // روز جمعه\r\n        if (!setting.isGregorian && tdNumber == 6)\r\n          td.classList.add('text-danger');\r\n        // روز یکشنبه\r\n        else if (setting.isGregorian && tdNumber == 0)\r\n          td.classList.add('text-danger');\r\n        tr.appendChild(td);\r\n        cellNumber++;\r\n        tdNumber++;\r\n        if (tdNumber >= 7) {\r\n          tdNumber = 0;\r\n          daysHtml += tr.outerHTML;\r\n          isTrAppended = true;\r\n          tr = document.createElement('TR');\r\n        }\r\n      }\r\n    }\r\n\r\n    // روزهای ماه جاری\r\n    for (i = 1; i <= numberOfDaysInCurrentMonth; i++) {\r\n\r\n      if (tdNumber >= 7) {\r\n        tdNumber = 0;\r\n        daysHtml += tr.outerHTML;\r\n        isTrAppended = true;\r\n        tr = document.createElement('TR');\r\n      }\r\n\r\n      // عدد روز\r\n      currentDateNumber = MdsPersianDateTimePicker.convertToNumber2(dateTimeToShowJson.year, dateTimeToShowJson.month, i);\r\n      dayNumberInString = setting.isGregorian ? MdsPersianDateTimePicker.zeroPad(i) : MdsPersianDateTimePicker.toPersianNumber(MdsPersianDateTimePicker.zeroPad(i));\r\n\r\n      td = document.createElement('TD');\r\n      td.setAttribute('data-day', '');\r\n      td.setAttribute('data-number', currentDateNumber.toString());\r\n      td.innerHTML = dayNumberInString;\r\n\r\n      // امروز\r\n      if (currentDateNumber == todayDateNumber) {\r\n        td.setAttribute('data-today', '');\r\n        td.setAttribute('title', setting.isGregorian ? MdsPersianDateTimePicker.todayText : MdsPersianDateTimePicker.todayTextPersian);\r\n        // اگر نام روز هفته انتخاب شده در تکس باکس قبل از تاریخ امروز باشد\r\n        // نباید دیگر نام روز هفته تغییر کند\r\n        if (!dayOfWeek)\r\n          dayOfWeek = MdsPersianDateTimePicker.getWeekDayName(tdNumber - 1 < 0 ? 0 : tdNumber - 1, setting.isGregorian);\r\n      }\r\n\r\n      // روز از قبل انتخاب شده\r\n      if (!setting.rangeSelector && selectedDateNumber == currentDateNumber) {\r\n        td.setAttribute('data-mds-dtp-selected-day', '');\r\n        dayOfWeek = MdsPersianDateTimePicker.getWeekDayName(tdNumber - 1 < 0 ? 0 : tdNumber - 1, setting.isGregorian);\r\n      }\r\n\r\n      // روزهای تعطیل\r\n      for (j = 0; j < holidaysDateNumbers.length; j++) {\r\n        if (holidaysDateNumbers[j] != currentDateNumber) continue;\r\n        td.classList.add('text-danger');\r\n        break;\r\n      }\r\n\r\n      // روز جمعه شمسی\r\n      if (!setting.isGregorian && tdNumber == 6) {\r\n        td.classList.add('text-danger');\r\n      }\r\n      // روز یکشنبه میلادی\r\n      else if (setting.isGregorian && tdNumber == 0) {\r\n        td.classList.add('text-danger');\r\n      }\r\n\r\n      // روزهای غیر فعال شده\r\n      if (setting.disableBeforeToday) {\r\n        if (currentDateNumber < todayDateNumber) td.setAttribute('disabled', '');\r\n        if (nextMonthDateNumber < todayDateNumber)\r\n          nextMonthButtonDisabledAttribute = 'disabled';\r\n        if (nextYearDateNumber < todayDateNumber)\r\n          nextYearButtonDisabledAttribute = 'disabled';\r\n        if (previousMonthDateNumber < todayDateNumber)\r\n          previousMonthButtonDisabledAttribute = 'disabled';\r\n        if (previousYearDateNumber < todayDateNumber)\r\n          previousYearButtonDisabledAttribute = 'disabled';\r\n        for (j = 1; j <= 12; j++) {\r\n          if (monthsDateNumberAndAttr['month' + j.toString() + 'DateNumber'] < todayDateNumber)\r\n            monthsDateNumberAndAttr['selectMonth' + j.toString() + 'ButtonCssClass'] = 'disabled';\r\n        }\r\n      }\r\n      if (setting.disableAfterToday) {\r\n        if (currentDateNumber > todayDateNumber) td.setAttribute('disabled', '');\r\n        if (nextMonthDateNumber > todayDateNumber)\r\n          nextMonthButtonDisabledAttribute = 'disabled';\r\n        if (nextYearDateNumber > todayDateNumber)\r\n          nextYearButtonDisabledAttribute = 'disabled';\r\n        if (previousMonthDateNumber > todayDateNumber)\r\n          previousMonthButtonDisabledAttribute = 'disabled';\r\n        if (previousYearDateNumber > todayDateNumber)\r\n          previousYearButtonDisabledAttribute = 'disabled';\r\n        for (j = 1; j <= 12; j++) {\r\n          if (monthsDateNumberAndAttr['month' + j.toString() + 'DateNumber'] > todayDateNumber)\r\n            monthsDateNumberAndAttr['selectMonth' + j.toString() + 'ButtonCssClass'] = 'disabled';\r\n        }\r\n      }\r\n      if (disableAfterDateTimeNumber) {\r\n        if (currentDateNumber > disableAfterDateTimeNumber) td.setAttribute('disabled', '');\r\n        if (nextMonthDateNumber > disableAfterDateTimeNumber)\r\n          nextMonthButtonDisabledAttribute = 'disabled';\r\n        if (nextYearDateNumber > disableAfterDateTimeNumber)\r\n          nextYearButtonDisabledAttribute = 'disabled';\r\n        if (previousMonthDateNumber > disableAfterDateTimeNumber)\r\n          previousMonthButtonDisabledAttribute = 'disabled';\r\n        if (previousYearDateNumber > disableAfterDateTimeNumber)\r\n          previousYearButtonDisabledAttribute = 'disabled';\r\n        for (j = 1; j <= 12; j++) {\r\n          if (monthsDateNumberAndAttr['month' + j.toString() + 'DateNumber'] > disableAfterDateTimeNumber)\r\n            monthsDateNumberAndAttr['selectMonth' + j.toString() + 'ButtonCssClass'] = 'disabled';\r\n        }\r\n      }\r\n      if (disableBeforeDateTimeNumber) {\r\n        if (currentDateNumber < disableBeforeDateTimeNumber) td.setAttribute('disabled', '');\r\n        if (nextMonthDateNumber < disableBeforeDateTimeNumber)\r\n          nextMonthButtonDisabledAttribute = 'disabled';\r\n        if (nextYearDateNumber < disableBeforeDateTimeNumber)\r\n          nextYearButtonDisabledAttribute = 'disabled';\r\n        if (previousMonthDateNumber < disableBeforeDateTimeNumber)\r\n          previousMonthButtonDisabledAttribute = 'disabled';\r\n        if (previousYearDateNumber < disableBeforeDateTimeNumber)\r\n          previousYearButtonDisabledAttribute = 'disabled';\r\n        for (j = 1; j <= 12; j++) {\r\n          if (monthsDateNumberAndAttr['month' + j.toString() + 'DateNumber'] < disableBeforeDateTimeNumber)\r\n            monthsDateNumberAndAttr['selectMonth' + j.toString() + 'ButtonCssClass'] = 'disabled';\r\n        }\r\n      }\r\n      for (j = 0; j < disabledDatesNumber.length; j++) {\r\n        if (currentDateNumber == disabledDatesNumber[j])\r\n          td.setAttribute('disabled', '');\r\n      }\r\n      for (j = 0; j < specialDatesNumber.length; j++) {\r\n        if (currentDateNumber == specialDatesNumber[j])\r\n          td.setAttribute('data-special-date', '');\r\n      }\r\n      if (setting.disabledDays != null && setting.disabledDays.length > 0 && setting.disabledDays.indexOf(tdNumber) >= 0) {\r\n        td.setAttribute('disabled', '');\r\n      }\r\n      // \\\\\r\n\r\n      if (setting.rangeSelector) {\r\n        if (currentDateNumber == rangeSelectorStartDateNumber || currentDateNumber == rangeSelectorEndDateNumber)\r\n          td.classList.add('selected-range-days-start-end');\r\n        else if (rangeSelectorStartDateNumber > 0 && rangeSelectorEndDateNumber > 0 && currentDateNumber > rangeSelectorStartDateNumber && currentDateNumber < rangeSelectorEndDateNumber)\r\n          td.classList.add('selected-range-days');\r\n      }\r\n\r\n      tr.appendChild(td);\r\n      isTrAppended = false;\r\n\r\n      tdNumber++;\r\n      cellNumber++;\r\n    }\r\n\r\n    if (tdNumber >= 7) {\r\n      tdNumber = 0;\r\n      daysHtml += tr.outerHTML;\r\n      isTrAppended = true;\r\n      tr = document.createElement('TR');\r\n    }\r\n\r\n    // روزهای ماه بعد\r\n    let nextMonthDateTimeJson = MdsPersianDateTimePicker.addMonthToDateTimeJson(dateTimeToShowJson, 1, setting.isGregorian);\r\n    for (i = 1; i <= 42 - cellNumber; i++) {\r\n      dayNumberInString = setting.isGregorian ? MdsPersianDateTimePicker.zeroPad(i) : MdsPersianDateTimePicker.toPersianNumber(MdsPersianDateTimePicker.zeroPad(i));\r\n      currentDateNumber = MdsPersianDateTimePicker.convertToNumber2(nextMonthDateTimeJson.year, nextMonthDateTimeJson.month, i);\r\n      td = document.createElement('TD');\r\n      td.setAttribute('data-nm', '');\r\n      td.setAttribute('data-number', currentDateNumber.toString());\r\n      td.innerHTML = dayNumberInString;\r\n      if (setting.rangeSelector) {\r\n        if (currentDateNumber == rangeSelectorStartDateNumber || currentDateNumber == rangeSelectorEndDateNumber)\r\n          td.classList.add('selected-range-days-start-end');\r\n        else if (rangeSelectorStartDateNumber > 0 && rangeSelectorEndDateNumber > 0 && currentDateNumber > rangeSelectorStartDateNumber && currentDateNumber < rangeSelectorEndDateNumber)\r\n          td.classList.add('selected-range-days-nm');\r\n      }\r\n      // روز جمعه\r\n      if (!setting.isGregorian && tdNumber == 6)\r\n        td.classList.add('text-danger');\r\n      // روز یکشنبه\r\n      else if (setting.isGregorian && tdNumber == 0)\r\n        td.classList.add('text-danger');\r\n      tr.appendChild(td);\r\n      tdNumber++;\r\n      if (tdNumber >= 7) {\r\n        tdNumber = 0;\r\n        daysHtml += tr.outerHTML;\r\n        isTrAppended = true;\r\n        tr = document.createElement('TR');\r\n      }\r\n    }\r\n\r\n    if (!isTrAppended) {\r\n      daysHtml += tr.outerHTML;\r\n      isTrAppended = true;\r\n    }\r\n\r\n    html = html.replace(/\\{\\{currentMonthInfo\\}\\}/img, currentMonthInfo);\r\n    html = html.replace(/\\{\\{selectedYear\\}\\}/img, selectedYear);\r\n    html = html.replace(/\\{\\{selectedMonthName\\}\\}/img, selectedMonthName);\r\n    html = html.replace(/\\{\\{daysHtml\\}\\}/img, daysHtml);\r\n    html = html.replace(/\\{\\{previousYearButtonDisabledAttribute\\}\\}/img, previousYearButtonDisabledAttribute);\r\n    html = html.replace(/\\{\\{previousYearButtonDateNumber\\}\\}/img, previousYearDateNumber.toString());\r\n    html = html.replace(/\\{\\{previousMonthButtonDisabledAttribute\\}\\}/img, previousMonthButtonDisabledAttribute);\r\n    html = html.replace(/\\{\\{previousMonthButtonDateNumber\\}\\}/img, previousMonthDateNumber.toString());\r\n    html = html.replace(/\\{\\{selectYearButtonDisabledAttribute\\}\\}/img, selectYearButtonDisabledAttribute);\r\n    html = html.replace(/\\{\\{nextMonthButtonDisabledAttribute\\}\\}/img, nextMonthButtonDisabledAttribute);\r\n    html = html.replace(/\\{\\{nextMonthButtonDateNumber\\}\\}/img, nextMonthDateNumber.toString());\r\n    html = html.replace(/\\{\\{nextYearButtonDisabledAttribute\\}\\}/img, nextYearButtonDisabledAttribute);\r\n    html = html.replace(/\\{\\{nextYearButtonDateNumber\\}\\}/img, nextYearDateNumber.toString());\r\n    html = html.replace(/\\{\\{dropDownMenuMonth1DateNumber\\}\\}/img, monthsDateNumberAndAttr.month1DateNumber);\r\n    html = html.replace(/\\{\\{dropDownMenuMonth2DateNumber\\}\\}/img, monthsDateNumberAndAttr.month2DateNumber);\r\n    html = html.replace(/\\{\\{dropDownMenuMonth3DateNumber\\}\\}/img, monthsDateNumberAndAttr.month3DateNumber);\r\n    html = html.replace(/\\{\\{dropDownMenuMonth4DateNumber\\}\\}/img, monthsDateNumberAndAttr.month4DateNumber);\r\n    html = html.replace(/\\{\\{dropDownMenuMonth5DateNumber\\}\\}/img, monthsDateNumberAndAttr.month5DateNumber);\r\n    html = html.replace(/\\{\\{dropDownMenuMonth6DateNumber\\}\\}/img, monthsDateNumberAndAttr.month6DateNumber);\r\n    html = html.replace(/\\{\\{dropDownMenuMonth7DateNumber\\}\\}/img, monthsDateNumberAndAttr.month7DateNumber);\r\n    html = html.replace(/\\{\\{dropDownMenuMonth8DateNumber\\}\\}/img, monthsDateNumberAndAttr.month8DateNumber);\r\n    html = html.replace(/\\{\\{dropDownMenuMonth9DateNumber\\}\\}/img, monthsDateNumberAndAttr.month9DateNumber);\r\n    html = html.replace(/\\{\\{dropDownMenuMonth10DateNumber\\}\\}/img, monthsDateNumberAndAttr.month10DateNumber);\r\n    html = html.replace(/\\{\\{dropDownMenuMonth11DateNumber\\}\\}/img, monthsDateNumberAndAttr.month11DateNumber);\r\n    html = html.replace(/\\{\\{dropDownMenuMonth12DateNumber\\}\\}/img, monthsDateNumberAndAttr.month12DateNumber);\r\n    html = html.replace(/\\{\\{selectMonth1ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth1ButtonCssClass);\r\n    html = html.replace(/\\{\\{selectMonth2ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth2ButtonCssClass);\r\n    html = html.replace(/\\{\\{selectMonth3ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth3ButtonCssClass);\r\n    html = html.replace(/\\{\\{selectMonth4ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth4ButtonCssClass);\r\n    html = html.replace(/\\{\\{selectMonth5ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth5ButtonCssClass);\r\n    html = html.replace(/\\{\\{selectMonth6ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth6ButtonCssClass);\r\n    html = html.replace(/\\{\\{selectMonth7ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth7ButtonCssClass);\r\n    html = html.replace(/\\{\\{selectMonth8ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth8ButtonCssClass);\r\n    html = html.replace(/\\{\\{selectMonth9ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth9ButtonCssClass);\r\n    html = html.replace(/\\{\\{selectMonth10ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth10ButtonCssClass);\r\n    html = html.replace(/\\{\\{selectMonth11ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth11ButtonCssClass);\r\n    html = html.replace(/\\{\\{selectMonth12ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth12ButtonCssClass);\r\n\r\n    return html;\r\n  }\r\n  private hideYearsBox = (element: Element, setting: MdsPersianDateTimePickerSetting): void => {\r\n    if (setting.inLine) {\r\n      const dtpInLine = element.closest('[data-mds-dtp-guid]');\r\n      if (dtpInLine == null) return;\r\n      const dtpInlineHeaderElement = dtpInLine.querySelector('[mds-dtp-inline-header]');\r\n      if (this.tempTitleString && dtpInlineHeaderElement != null)\r\n        dtpInlineHeaderElement.innerHTML = this.tempTitleString;\r\n      const yearListBoxElement = dtpInLine.querySelector('[data-mds-dtp-year-list-box]');\r\n      if (yearListBoxElement != null) {\r\n        yearListBoxElement.classList.add('w-0');\r\n        yearListBoxElement.innerHTML = '';\r\n      }\r\n      const inlineYearsContainerElement = dtpInLine.querySelector('[data-name=\"dtp-years-container\"]');\r\n      if (inlineYearsContainerElement != null) {\r\n        inlineYearsContainerElement.classList.add('w-0');\r\n        inlineYearsContainerElement.innerHTML = '';\r\n      }\r\n      dtpInLine.classList.remove('overflow-hidden');\r\n    } else {\r\n      const popoverOrModalElement = setting.modalMode ? this.getModal() : this.getPopover(element);\r\n      if (popoverOrModalElement == null) return;\r\n      if (this.tempTitleString) {\r\n        if (setting.modalMode)\r\n          popoverOrModalElement.querySelector('[data-mds-dtp-title] .modal-title')!.innerHTML = this.tempTitleString;\r\n        else {\r\n          popoverOrModalElement.querySelector('[data-mds-dtp-title]')!.innerHTML = this.tempTitleString;\r\n        }\r\n        popoverOrModalElement.querySelector('[data-name=\"mds-dtp-body\"]')!.removeAttribute('hidden');\r\n      }\r\n      const yearListBox = popoverOrModalElement.querySelector('[data-mds-dtp-year-list-box]');\r\n      yearListBox!.classList.add('w-0');\r\n      yearListBox!.innerHTML = '';\r\n    }\r\n  }\r\n  private showYearsBox = (element: Element): void => {\r\n    const instance = MdsPersianDateTimePicker.getInstance(element);\r\n    if (!instance) {\r\n      return;\r\n    }\r\n    const setting = instance.setting;\r\n    const mdDatePickerContainer = setting.inLine ? element.closest('[data-mds-dtp-guid]') : element.closest('[data-mds-dtp]');\r\n    if (mdDatePickerContainer == null) return;\r\n    this.tempTitleString = setting.inLine\r\n      ? mdDatePickerContainer.querySelector('[mds-dtp-inline-header]')!.textContent!.trim()\r\n      : mdDatePickerContainer.querySelector('[data-mds-dtp-title]')!.textContent!.trim();\r\n    const yearsToSelectObject = this.getYearsBoxBodyHtml(setting, 0);\r\n    const dateTimePickerYearsToSelectHtml = yearsToSelectObject.html;\r\n    const dateTimePickerYearsToSelectContainer = mdDatePickerContainer.querySelector('[data-mds-dtp-year-list-box]');\r\n    this.setPopoverHeaderHtml(element, setting, this.getYearsBoxHeaderHtml(setting, yearsToSelectObject.yearStart, yearsToSelectObject.yearEnd));\r\n    dateTimePickerYearsToSelectContainer!.innerHTML = dateTimePickerYearsToSelectHtml;\r\n    dateTimePickerYearsToSelectContainer!.classList.remove('w-0');\r\n    if (setting.inLine) {\r\n      mdDatePickerContainer.classList.add('overflow-hidden')\r\n      dateTimePickerYearsToSelectContainer!.classList.add('inline');\r\n    } else if (setting.modalMode) {\r\n      mdDatePickerContainer.querySelector('[data-name=\"mds-dtp-body\"]')!.setAttribute('hidden', '');\r\n    } else {\r\n      dateTimePickerYearsToSelectContainer!.classList.remove('inline');\r\n    }\r\n  }\r\n  private changeYearList = (element: Element): void => {\r\n    // کلیک روی دکمه های عوض کردن رنج سال انتخابی\r\n    const instance = MdsPersianDateTimePicker.getInstance(element);\r\n    if (!instance) {\r\n      return;\r\n    }\r\n    const setting = instance.setting;\r\n    const isNext = element.getAttribute('data-year-range-button-change') == '1';\r\n    const yearStart = Number(element.getAttribute('data-year'));\r\n    const yearsToSelectObject = this.getYearsBoxBodyHtml(setting, isNext ? yearStart : yearStart - setting.yearOffset * 2);\r\n    if (setting.inLine)\r\n      element.closest('[data-mds-dtp-guid]')!.querySelector('[data-mds-dtp-year-list-box]')!.innerHTML = yearsToSelectObject.html;\r\n    else\r\n      element.closest('[data-mds-dtp]')!.querySelector('[data-mds-dtp-year-list-box]')!.innerHTML = yearsToSelectObject.html;\r\n    this.setPopoverHeaderHtml(element, setting, this.getYearsBoxHeaderHtml(setting, yearsToSelectObject.yearStart, yearsToSelectObject.yearEnd));\r\n  }\r\n  private getPopoverHeaderTitle(setting: MdsPersianDateTimePickerSetting): string {\r\n    let selectedDateToShowJson: GetDateTimeJson1;\r\n    let title = '';\r\n    if (setting.isGregorian) {\r\n      selectedDateToShowJson = MdsPersianDateTimePicker.getDateTimeJson1(setting.selectedDateToShow);\r\n    } else {\r\n      selectedDateToShowJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(setting.selectedDateToShow);\r\n    }\r\n    if (setting.rangeSelector) {\r\n      const startDate = MdsPersianDateTimePicker.addMonthToDateTime(setting.selectedDateToShow, -setting.rangeSelectorMonthsToShow[0], setting.isGregorian);\r\n      const endDate = MdsPersianDateTimePicker.addMonthToDateTime(setting.selectedDateToShow, setting.rangeSelectorMonthsToShow[1], setting.isGregorian);\r\n      let statDateJson: GetDateTimeJson1;\r\n      let endDateJson: GetDateTimeJson1;\r\n      if (setting.isGregorian) {\r\n        statDateJson = MdsPersianDateTimePicker.getDateTimeJson1(startDate);\r\n        endDateJson = MdsPersianDateTimePicker.getDateTimeJson1(endDate);\r\n      } else {\r\n        statDateJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(startDate);\r\n        endDateJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(endDate);\r\n      }\r\n      const startMonthName = MdsPersianDateTimePicker.getMonthName(statDateJson.month - 1, setting.isGregorian);\r\n      const endMonthName = MdsPersianDateTimePicker.getMonthName(endDateJson.month - 1, setting.isGregorian);\r\n      title = `${startMonthName} ${statDateJson.year} - ${endMonthName} ${endDateJson.year}`;\r\n    }\r\n    else\r\n      title = `${MdsPersianDateTimePicker.getMonthName(selectedDateToShowJson.month - 1, setting.isGregorian)} ${selectedDateToShowJson.year}`;\r\n    if (!setting.isGregorian)\r\n      title = MdsPersianDateTimePicker.toPersianNumber(title);\r\n    return title;\r\n  }\r\n  private setPopoverHeaderHtml = (element: Element, setting: MdsPersianDateTimePickerSetting, htmlString: string): void => {\r\n    // element = المانی که روی آن فعالیتی انجام شده و باید عنوان تقویم آن عوض شود    \r\n    if (this.bsPopover != null) {\r\n      const popoverElement = this.getPopover(element);\r\n      if (popoverElement == null) return;\r\n      popoverElement.querySelector('[data-mds-dtp-title]')!.innerHTML = htmlString;\r\n    } else if (setting.inLine) {\r\n      let inlineTitleBox = element.closest('[data-mds-dtp-guid]')!.querySelector('[data-name=\"dtp-years-container\"]')!;\r\n      inlineTitleBox.innerHTML = htmlString;\r\n      inlineTitleBox.classList.remove('w-0');\r\n    }\r\n    else if (setting.modalMode) {\r\n      let inlineTitleBox = element.closest('[data-mds-dtp-guid]')!.querySelector('[data-mds-dtp-title] .modal-title')!;\r\n      inlineTitleBox.innerHTML = htmlString;\r\n    }\r\n  }\r\n  private getDateTimePickerBodyHtml(setting: MdsPersianDateTimePickerSetting): string {\r\n    let selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(setting.selectedDateToShow);\r\n    let html = MdsPersianDateTimePicker.dateTimePickerHtmlTemplate;\r\n\r\n    html = html.replace(/\\{\\{inlineAttr\\}\\}/img, setting.inLine ? 'data-inline' : '');\r\n    html = html.replace(/\\{\\{rtlCssClass\\}\\}/img, setting.isGregorian ? '' : 'rtl');\r\n    html = html.replace(/\\{\\{selectedDateStringAttribute\\}\\}/img, setting.inLine ? '' : 'hidden');\r\n    html = html.replace(/\\{\\{goTodayText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.goTodayText : MdsPersianDateTimePicker.goTodayTextPersian);\r\n    html = html.replace(/\\{\\{timePickerAttribute\\}\\}/img, setting.enableTimePicker ? '' : 'hidden');\r\n\r\n    const disabledDays = MdsPersianDateTimePicker.getDisabledDateObject(setting);\r\n    let title = '';\r\n    let todayDateString = '';\r\n    let todayDateTimeJson: GetDateTimeJson1;\r\n    let selectedDateTimeToShowJson: GetDateTimeJson1;\r\n    let disableBeforeDateTimeJson: GetDateTimeJson1 | null = disabledDays[0];\r\n    let disableAfterDateTimeJson: GetDateTimeJson1 | null = disabledDays[1];\r\n\r\n    if (setting.isGregorian) {\r\n      selectedDateTimeToShowJson = MdsPersianDateTimePicker.getDateTimeJson1(selectedDateToShow);\r\n      todayDateTimeJson = MdsPersianDateTimePicker.getDateTimeJson1(new Date());\r\n    } else {\r\n      selectedDateTimeToShowJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(selectedDateToShow);\r\n      todayDateTimeJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(new Date());\r\n    }\r\n\r\n    title = this.getPopoverHeaderTitle(setting);\r\n    todayDateString = `${setting.isGregorian ? 'Today,' : 'امروز،'} ${todayDateTimeJson.day} ${MdsPersianDateTimePicker.getMonthName(todayDateTimeJson.month - 1, setting.isGregorian)} ${todayDateTimeJson.year}`;\r\n    if (!setting.isGregorian) {\r\n      todayDateString = MdsPersianDateTimePicker.toPersianNumber(todayDateString);\r\n    }\r\n\r\n    if (disableAfterDateTimeJson != undefined && disableAfterDateTimeJson.year <= selectedDateTimeToShowJson.year && disableAfterDateTimeJson.month < selectedDateTimeToShowJson.month)\r\n      selectedDateToShow = setting.isGregorian ? new Date(disableAfterDateTimeJson.year, disableAfterDateTimeJson.month - 1, 1) : MdsPersianDateTimePicker.getDateTime1(disableAfterDateTimeJson.year, disableAfterDateTimeJson.month, disableAfterDateTimeJson.day);\r\n\r\n    if (disableBeforeDateTimeJson != undefined && disableBeforeDateTimeJson.year >= selectedDateTimeToShowJson.year && disableBeforeDateTimeJson.month > selectedDateTimeToShowJson.month)\r\n      selectedDateToShow = setting.isGregorian ? new Date(disableBeforeDateTimeJson.year, disableBeforeDateTimeJson.month - 1, 1) : MdsPersianDateTimePicker.getDateTime1(disableBeforeDateTimeJson.year, disableBeforeDateTimeJson.month, disableBeforeDateTimeJson.day);\r\n\r\n    let monthsTdHtml = '';\r\n    // let tempSelectedDateToShow = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n    let numberOfNextMonths = setting.rangeSelectorMonthsToShow[1] <= 0 ? 0 : setting.rangeSelectorMonthsToShow[1];\r\n    let numberOfPrevMonths = setting.rangeSelectorMonthsToShow[0] <= 0 ? 0 : setting.rangeSelectorMonthsToShow[0];\r\n    numberOfPrevMonths *= -1;\r\n    for (let i1 = numberOfPrevMonths; i1 < 0; i1++) {\r\n      setting.selectedDateToShow = MdsPersianDateTimePicker.addMonthToDateTime(MdsPersianDateTimePicker.getClonedDate(selectedDateToShow), i1, setting.isGregorian);\r\n      monthsTdHtml += this.getDateTimePickerMonthHtml(setting, false, true);\r\n    }\r\n    setting.selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n    monthsTdHtml += this.getDateTimePickerMonthHtml(setting, false, false);\r\n    for (let i2 = 1; i2 <= numberOfNextMonths; i2++) {\r\n      setting.selectedDateToShow = MdsPersianDateTimePicker.addMonthToDateTime(MdsPersianDateTimePicker.getClonedDate(selectedDateToShow), i2, setting.isGregorian);\r\n      monthsTdHtml += this.getDateTimePickerMonthHtml(setting, true, false);\r\n    }\r\n    // setting.selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n\r\n    let totalMonthNumberToShow = Math.abs(numberOfPrevMonths) + 1 + numberOfNextMonths;\r\n    let monthTdStyle = totalMonthNumberToShow > 1 ? 'width: ' + (100 / totalMonthNumberToShow).toString() + '%;' : '';\r\n\r\n    monthsTdHtml = monthsTdHtml.replace(/\\{\\{monthTdStyle\\}\\}/img, monthTdStyle);\r\n\r\n    html = html.replace(/\\{\\{dtpInlineHeader\\}\\}/img, title);\r\n    html = html.replace(/\\{\\{todayDateString\\}\\}/img, todayDateString);\r\n    html = html.replace(/\\{\\{time\\}\\}/img, `${MdsPersianDateTimePicker.zeroPad(selectedDateTimeToShowJson.hour)}:${MdsPersianDateTimePicker.zeroPad(selectedDateTimeToShowJson.minute)}`);\r\n    html = html.replace(/\\{\\{monthsTdHtml\\}\\}/img, monthsTdHtml);\r\n\r\n    return html;\r\n  }\r\n  private updateCalendarBodyHtml = (element: Element, setting: MdsPersianDateTimePickerSetting, updatePopoverContent = false): void => {\r\n    const calendarHtml = this.getDateTimePickerBodyHtml(setting);\r\n    const dtpInlineHeader = calendarHtml.match(/<th mds-dtp-inline-header\\b[^>]*>(.*?)<\\/th>/img)![0];\r\n    this.tempTitleString = dtpInlineHeader;\r\n    if (!setting.inLine && updatePopoverContent && !setting.modalMode) {\r\n      const popover = this.getBsPopoverInstance();\r\n      if (!popover) {\r\n        console.error(\"mds.bs.datetimepicker: `BsPopoverInstance` is null!\");\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        popover.setContent({\r\n          '.popover-header': dtpInlineHeader,\r\n          '.popover-body': calendarHtml\r\n        });\r\n      }, 100);\r\n      return;\r\n    }\r\n    let containerElement = element.closest('[data-name=\"mds-dtp-body\"]');\r\n    if (containerElement == null) {\r\n      containerElement = element.closest('[data-mds-dtp-guid]');\r\n      if (containerElement == null) {\r\n        console.error(\"mds.bs.datetimepicker: `data-mds-dtp-guid` element not found !\")\r\n        return;\r\n      }\r\n      if (setting.modalMode)\r\n        containerElement = containerElement.querySelector('[data-name=\"mds-dtp-body\"]');\r\n    }\r\n    if (!containerElement) {\r\n      console.error(\"mds.bs.datetimepicker: `data-mds-dtp-guid` element not found!\")\r\n      return;\r\n    }\r\n    this.setPopoverHeaderHtml(element, setting, dtpInlineHeader.trim());\r\n    containerElement.innerHTML = calendarHtml;\r\n    this.hideYearsBox(element, setting);\r\n    this.enableEvents();\r\n    this.enableInLineEvents();\r\n  }\r\n  private changeMonth = (element: Element): void => {\r\n    const instance = MdsPersianDateTimePicker.getInstance(element);\r\n    if (!instance || instance.setting.disabled)\r\n      return;\r\n    const dateNumber = Number(element.getAttribute('data-number'));\r\n    const setting = instance.setting;\r\n    let selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(setting.selectedDateToShow);\r\n    selectedDateToShow = MdsPersianDateTimePicker.getDateTime4(dateNumber, selectedDateToShow, setting.isGregorian);\r\n    setting.selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n    MdsPersianDateTimePickerData.set(instance.guid, instance);\r\n    this.updateCalendarBodyHtml(element, setting);\r\n    if (setting.calendarViewOnChange != undefined)\r\n      setting.calendarViewOnChange(selectedDateToShow);\r\n  }\r\n  private selectDay = (element: Element): void => {\r\n    // کلیک روی روزها\r\n    // انتخاب روز\r\n    const instance = MdsPersianDateTimePicker.getInstance(element);\r\n    if (!instance) return;\r\n    if (instance.setting.disabled || element.getAttribute('disabled') != undefined)\r\n      return;\r\n    let dateNumber = Number(element.getAttribute('data-number'));\r\n    const setting = instance.setting;\r\n    const disabled = element.getAttribute('disabled') != undefined;\r\n    if (setting.selectedDate != undefined && !setting.enableTimePicker) {\r\n      setting.selectedDate.setHours(0);\r\n      setting.selectedDate.setMinutes(0);\r\n      setting.selectedDate.setSeconds(0);\r\n    }\r\n    let selectedDateJson = !setting.selectedDate ? null : MdsPersianDateTimePicker.getDateTimeJson1(setting.selectedDate);\r\n    let selectedDateToShow = !setting.selectedDateToShow ? new Date() : MdsPersianDateTimePicker.getClonedDate(setting.selectedDateToShow);\r\n    let selectedDateToShowJson = MdsPersianDateTimePicker.getDateTimeJson1(selectedDateToShow);\r\n    if (disabled) {\r\n      if (setting.onDayClick != undefined) setting.onDayClick(setting);\r\n      return;\r\n    }\r\n    selectedDateToShow = MdsPersianDateTimePicker.getDateTime4(dateNumber, selectedDateToShow, setting.isGregorian);\r\n    if (setting.rangeSelector) { // اگر رنج سلکتور فعال بود\r\n      if (setting.rangeSelectorStartDate != null && setting.rangeSelectorEndDate != null) {\r\n        setting.selectedRangeDate = [];\r\n        setting.rangeSelectorStartDate = null;\r\n        setting.rangeSelectorEndDate = null;\r\n        let closestSelector = '[data-mds-dtp]';\r\n        if (setting.inLine)\r\n          closestSelector = '[data-mds-dtp-guid]';\r\n        element.closest(closestSelector)?.querySelectorAll('td.selected-range-days-start-end,td.selected-range-days')\r\n          .forEach(e => {\r\n            e.classList.remove('selected-range-days');\r\n            e.classList.remove('selected-range-days-start-end');\r\n          });\r\n      }\r\n      if (setting.rangeSelectorStartDate == undefined) {\r\n        element.classList.add('selected-range-days-start-end');\r\n        setting.rangeSelectorStartDate = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n        setting.selectedDate = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n        setting.selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n      } else if (setting.rangeSelectorStartDate != undefined && setting.rangeSelectorEndDate == undefined) {\r\n        if (setting.rangeSelectorStartDate.getTime() >= selectedDateToShow.getTime())\r\n          return;\r\n        element.classList.add('selected-range-days-start-end');\r\n        setting.rangeSelectorEndDate = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n        MdsPersianDateTimePicker.setSelectedData(setting);\r\n      }\r\n      MdsPersianDateTimePickerData.set(instance.guid, instance);\r\n      if (setting.rangeSelectorStartDate != undefined && setting.rangeSelectorEndDate != undefined) {\r\n        setting.selectedRangeDate = [MdsPersianDateTimePicker.getClonedDate(setting.rangeSelectorStartDate), MdsPersianDateTimePicker.getClonedDate(setting.rangeSelectorEndDate)];\r\n        if (!setting.inLine)\r\n          instance.hide();\r\n        else\r\n          this.updateCalendarBodyHtml(element, setting);\r\n      }\r\n      return;\r\n    }\r\n    setting.selectedDate = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n    if (setting.selectedDate != undefined && !setting.enableTimePicker) {\r\n      setting.selectedDate.setHours(0);\r\n      setting.selectedDate.setMinutes(0);\r\n      setting.selectedDate.setSeconds(0);\r\n    }\r\n    setting.selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n    if (selectedDateJson != undefined) {\r\n      if (setting.enableTimePicker) {\r\n        selectedDateJson.hour = selectedDateToShowJson.hour;\r\n        selectedDateJson.minute = selectedDateToShowJson.minute;\r\n        selectedDateJson.second = selectedDateToShowJson.second;\r\n      } else {\r\n        selectedDateJson.hour = 0;\r\n        selectedDateJson.minute = 0;\r\n        selectedDateJson.second = 0;\r\n      }\r\n      setting.selectedDate.setHours(selectedDateJson.hour);\r\n      setting.selectedDate.setMinutes(selectedDateJson.minute);\r\n      setting.selectedDate.setSeconds(selectedDateJson.second);\r\n    }\r\n    MdsPersianDateTimePickerData.set(instance.guid, instance);\r\n    MdsPersianDateTimePicker.setSelectedData(setting);\r\n    element.setAttribute('data-mds-dtp-selected-day', '');\r\n    if (setting.toDate || setting.fromDate) {\r\n      // وقتی روی روز یکی از تقویم ها کلیک می شود\r\n      // باید تقویم دیگر نیز تغییر کند و روزهایی از آن غیر فعال شود\r\n      const toDateElement = document.querySelector(`[data-mds-dtp-group=\"${setting.groupId}\"][data-to-date]`);\r\n      const fromDateElement = document.querySelector(`[data-mds-dtp-group=\"${setting.groupId}\"][data-from-date]`);\r\n      if (setting.fromDate && toDateElement != undefined) {\r\n        const toDateInstance = MdsPersianDateTimePicker.getInstance(toDateElement);\r\n        if (toDateInstance != null) {\r\n          if (setting.inLine)\r\n            this.updateCalendarBodyHtml(toDateElement, toDateInstance.setting);\r\n          else\r\n            toDateInstance.initializeBsPopover(toDateInstance.setting);\r\n        }\r\n      } else if (setting.toDate && fromDateElement != undefined) {\r\n        const fromDateInstance = MdsPersianDateTimePicker.getInstance(fromDateElement);\r\n        if (fromDateInstance != null) {\r\n          if (setting.inLine)\r\n            this.updateCalendarBodyHtml(fromDateElement, fromDateInstance.setting);\r\n          else\r\n            fromDateInstance.initializeBsPopover(fromDateInstance.setting);\r\n        }\r\n      } else\r\n        this.updateCalendarBodyHtml(element, setting);\r\n    } else\r\n      this.updateCalendarBodyHtml(element, setting, true);\r\n    if (setting.onDayClick != undefined)\r\n      setting.onDayClick(setting);\r\n    if (!setting.inLine) {\r\n      instance.hide();\r\n    } else {\r\n      // حذف روزهای انتخاب شده در تقویم این لاین\r\n      let dtp = element.closest(`[data-mds-dtp-guid=\"${this.guid}\"]`);\r\n      if (!dtp)\r\n        dtp = document.querySelector(`[data-mds-dtp-guid=\"${this.guid}\"]`);\r\n      dtp!.querySelectorAll(`[data-day]:not([data-number=\"${element.getAttribute('data-number')}\"])`)\r\n        .forEach(e => e.removeAttribute('data-mds-dtp-selected-day'));\r\n    }\r\n  }\r\n  private hoverOnDays = (e: Event): void => {\r\n    // هاور روی روزها\r\n    const element = <Element>e.target;\r\n    const instance = MdsPersianDateTimePicker.getInstance(element);\r\n    if (!instance) return;\r\n    const setting = instance.setting;\r\n\r\n    if (element.getAttribute('disabled') != undefined || !setting.rangeSelector ||\r\n      (setting.rangeSelectorStartDate != undefined && setting.rangeSelectorEndDate != undefined)) return;\r\n\r\n    const dateNumber = Number(element.getAttribute('data-number'));\r\n    const allDayElements: Element[] = [].slice.call(document.querySelectorAll('td[data-day]'));\r\n    allDayElements.forEach(e => {\r\n      e.classList.remove('selected-range-days');\r\n      e.classList.remove('selected-range-days-nm');\r\n    });\r\n\r\n    const allNextOrPrevMonthDayElements: Element[] = [].slice.call(document.querySelectorAll('td[data-nm]'));\r\n    allNextOrPrevMonthDayElements.forEach(e => {\r\n      e.classList.remove('selected-range-days');\r\n      e.classList.remove('selected-range-days-nm');\r\n    });\r\n\r\n    const rangeSelectorStartDate = !setting.rangeSelectorStartDate ? undefined : MdsPersianDateTimePicker.getClonedDate(setting.rangeSelectorStartDate);\r\n    const rangeSelectorEndDate = !setting.rangeSelectorEndDate ? undefined : MdsPersianDateTimePicker.getClonedDate(setting.rangeSelectorEndDate);\r\n    let rangeSelectorStartDateNumber = 0;\r\n    let rangeSelectorEndDateNumber = 0;\r\n\r\n    if (setting.isGregorian) {\r\n      rangeSelectorStartDateNumber = !rangeSelectorStartDate ? 0 : MdsPersianDateTimePicker.convertToNumber3(rangeSelectorStartDate);\r\n      rangeSelectorEndDateNumber = !rangeSelectorEndDate ? 0 : MdsPersianDateTimePicker.convertToNumber3(rangeSelectorEndDate);\r\n    } else {\r\n      rangeSelectorStartDateNumber = !rangeSelectorStartDate ? 0 : MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(rangeSelectorStartDate));\r\n      rangeSelectorEndDateNumber = !rangeSelectorEndDate ? 0 : MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(rangeSelectorEndDate));\r\n    }\r\n\r\n    if (rangeSelectorStartDateNumber > 0 && dateNumber > rangeSelectorStartDateNumber) {\r\n      for (var i1 = rangeSelectorStartDateNumber; i1 <= dateNumber; i1++) {\r\n        allDayElements.filter(e => e.getAttribute('data-number') == i1.toString() && e.classList.value.indexOf('selected-range-days-start-end') <= -1)\r\n          .forEach(e => e.classList.add('selected-range-days'));\r\n        allNextOrPrevMonthDayElements.filter(e => e.getAttribute('data-number') == i1.toString() && e.classList.value.indexOf('selected-range-days-start-end') <= -1)\r\n          .forEach(e => e.classList.add('selected-range-days-nm'));\r\n      }\r\n    } else if (rangeSelectorEndDateNumber > 0 && dateNumber < rangeSelectorEndDateNumber) {\r\n      for (var i2 = dateNumber; i2 <= rangeSelectorEndDateNumber; i2++) {\r\n        allDayElements.filter(e => e.getAttribute('data-number') == i2.toString() && e.classList.value.indexOf('selected-range-days-start-end') <= -1)\r\n          .forEach(e => e.classList.add('selected-range-days'));\r\n        allNextOrPrevMonthDayElements.filter(e => e.getAttribute('data-number') == i2.toString() && e.classList.value.indexOf('selected-range-days-start-end') <= -1)\r\n          .forEach(e => e.classList.add('selected-range-days-nm'));\r\n      }\r\n    }\r\n\r\n  }\r\n  private goToday = (e: Event): void => {\r\n    const element = <Element>e.target;\r\n    const instance = MdsPersianDateTimePicker.getInstance(element);\r\n    if (!instance)\r\n      return;\r\n    const setting = instance.setting;\r\n    setting.selectedDateToShow = new Date();\r\n    MdsPersianDateTimePickerData.set(instance.guid, instance);\r\n    this.updateCalendarBodyHtml(element, setting);\r\n  }\r\n  private timeChanged = (e: Event): void => {\r\n    // عوض کردن ساعت\r\n    const element = <Element>e.target;\r\n    const instance = MdsPersianDateTimePicker.getInstance(element);\r\n    if (!instance) return;\r\n    const setting = instance.setting;\r\n    const value: string = (<any>element).value;\r\n    if (!setting.enableTimePicker) return;\r\n    if (setting.selectedDateToShow == undefined)\r\n      setting.selectedDateToShow = new Date();\r\n    let hour = Number(value.substr(0, 2));\r\n    let minute = Number(value.substr(3, 2));\r\n    setting.selectedDateToShow = new Date(setting.selectedDateToShow.setHours(hour));\r\n    setting.selectedDateToShow = new Date(setting.selectedDateToShow.setMinutes(minute));\r\n    if (setting.selectedDate == undefined)\r\n      setting.selectedDate = new Date();\r\n    setting.selectedDate = new Date(setting.selectedDate.setHours(hour));\r\n    setting.selectedDate = new Date(setting.selectedDate.setMinutes(minute));\r\n    MdsPersianDateTimePickerData.set(instance.guid, instance);\r\n    MdsPersianDateTimePicker.setSelectedData(setting);\r\n  }\r\n  private enableMainEvents(): void {\r\n    if (this.setting.inLine) return;\r\n    if (this.bsPopover != null) {\r\n      this.element.addEventListener('shown.bs.popover', this.popoverOrModalShownEvent);\r\n      this.element.addEventListener('hidden.bs.popover', this.popoverOrModalHiddenEvent);\r\n      this.element.addEventListener('inserted.bs.popover', this.popoverInsertedEvent);\r\n      this.element.addEventListener('click', this.showPopoverEvent, true);\r\n    } else if (this.bsModal != null) {\r\n      const modalElement = this.getModal();\r\n      if (modalElement == null) {\r\n        console.error(\"mds.bs.datetimepicker: `modalElement` not found!\");\r\n        return;\r\n      }\r\n      modalElement.addEventListener('shown.bs.modal', this.popoverOrModalShownEvent);\r\n      modalElement.addEventListener('hidden.bs.modal', this.popoverOrModalHiddenEvent);\r\n    }\r\n  }\r\n  private popoverInsertedEvent = (e: Event): void => {\r\n    const element = <Element>e.target;\r\n    const instance = MdsPersianDateTimePicker.getInstance(element);\r\n    if (!instance) return;\r\n    const setting = instance.setting;\r\n    this.hideYearsBox(element, setting);\r\n  }\r\n  private popoverOrModalShownEvent = (): void => {\r\n    this.enableEvents();\r\n  }\r\n  private popoverOrModalHiddenEvent = (): void => {\r\n    this.disableEvents();\r\n  }\r\n  private enableInLineEvents(): void {\r\n    if (!this.setting.inLine) return;\r\n    setTimeout(() => {\r\n      const dtp = document.querySelector(`[data-mds-dtp-guid=\"${this.guid}\"]`);\r\n      if (dtp != null) {\r\n        dtp.querySelector('[data-mds-dtp-time]')?.addEventListener('change', this.timeChanged, false);\r\n        dtp.addEventListener('click', this.selectCorrectClickEvent);\r\n        dtp.querySelectorAll('[data-day]').forEach(e => e.addEventListener('mouseenter', this.hoverOnDays, true));\r\n      }\r\n    }, 100);\r\n  }\r\n  private enableEvents(): void {\r\n    if (this.setting.inLine) return;\r\n    setTimeout(() => {\r\n      document.addEventListener('click', this.selectCorrectClickEvent, false);\r\n      document.querySelector('html')!.addEventListener('click', this.hidePopoverEvent, true);\r\n      document.querySelectorAll('[data-mds-dtp-time]').forEach(e => e.addEventListener('change', this.timeChanged, false));\r\n      document.querySelectorAll('[data-mds-dtp] [data-day]').forEach(e => e.addEventListener('mouseenter', this.hoverOnDays, true));\r\n    }, 500);\r\n  }\r\n  private disableEvents(): void {\r\n    document.removeEventListener('click', this.selectCorrectClickEvent);\r\n    document.querySelector('html')!.removeEventListener('click', this.hidePopoverEvent);\r\n    document.querySelectorAll('[data-mds-dtp-time]')?.forEach(e => e.removeEventListener('change', this.timeChanged));\r\n    document.querySelectorAll('[data-mds-dtp] [data-day]').forEach(e => e.removeEventListener('mouseenter', this.hoverOnDays));\r\n    const dtp = document.querySelector(`[data-mds-dtp-guid=\"${this.guid}\"]`);\r\n    if (dtp != null) {\r\n      dtp.removeEventListener('click', this.selectCorrectClickEvent, false);\r\n      dtp.querySelectorAll('[data-day]')?.forEach(e => e.removeEventListener('mouseenter', this.hoverOnDays, true));\r\n    }\r\n  }\r\n  private selectCorrectClickEvent = (e: Event): void => {\r\n    const element = <Element>e.target;\r\n    const instance = MdsPersianDateTimePicker.getInstance(element);\r\n    if (!instance) return;\r\n    if (instance != null && (instance.setting.disabled || instance.element.getAttribute('disabled') != undefined))\r\n      return;\r\n    if (element.getAttribute('mds-pdtp-select-year-button') != null) {\r\n      instance.showYearsBox(element);\r\n    } else if (element.getAttribute('data-mds-dtp-go-today') != null) {\r\n      this.goToday(e);\r\n    } else if (element.getAttribute('data-day') != null) {\r\n      this.selectDay(element);\r\n    } else if (element.getAttribute('data-mds-hide-year-list-box')) {\r\n      this.hideYearsBox(element, instance.setting);\r\n    } else if (element.getAttribute('data-change-date-button')) {\r\n      this.changeMonth(element);\r\n    } else if (element.getAttribute('data-year-range-button-change') != null && element.getAttribute('disabled') == null) {\r\n      this.changeYearList(element);\r\n    }\r\n  }\r\n  private showPopoverEvent = (e: Event): void => {\r\n    MdsPersianDateTimePickerData.getAll().forEach(i => i.hide());\r\n    const element = <Element>e.target;\r\n    const instance = MdsPersianDateTimePicker.getInstance(element);\r\n    if (!instance || instance.setting.disabled)\r\n      return;\r\n    instance.show();\r\n  }\r\n  private hidePopoverEvent = (e: Event): void => {\r\n    const element = <Element>e.target;\r\n    if (element.tagName == 'HTML') {\r\n      MdsPersianDateTimePickerData.getAll().forEach(i => !i.setting.modalMode ? i.hide() : () => { });\r\n      return;\r\n    }\r\n    const isWithinDatePicker = element.closest('[data-mds-dtp]') != null || element.getAttribute('data-mds-dtp-guid') != null || element.getAttribute('data-mds-dtp-go-today') != null;\r\n    if (!isWithinDatePicker) {\r\n      MdsPersianDateTimePickerData.getAll().forEach(i => i.hide());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * نمایش تقویم\r\n   */\r\n  show(): void {\r\n    this.bsModal?.show();\r\n    this.bsPopover?.show();\r\n  }\r\n  /**\r\n   * مخفی کردن تقویم\r\n   */\r\n  hide(): void {\r\n    this.bsModal?.hide();\r\n    this.bsPopover?.hide();\r\n  }\r\n  /**\r\n   * مخفی یا نمایش تقویم \r\n   */\r\n  toggle(): void {\r\n    if (this.bsPopover == null) return;\r\n    this.bsPopover.toggle();\r\n  }\r\n  /**\r\n   * فعال کردن تقویم\r\n   */\r\n  enable(): void {\r\n    this.setting.disabled = false;\r\n    this.element.removeAttribute(\"disabled\");\r\n    MdsPersianDateTimePickerData.set(this.guid, this);\r\n    if (this.bsPopover != null)\r\n      this.bsPopover.enable();\r\n  }\r\n  /**\r\n   * غیر فعال کردن تقویم\r\n   */\r\n  disable(): void {\r\n    this.setting.disabled = true;\r\n    this.element.setAttribute(\"disabled\", '');\r\n    MdsPersianDateTimePickerData.set(this.guid, this);\r\n    if (this.bsPopover != null)\r\n      this.bsPopover.disable();\r\n  }\r\n  /**\r\n   * بروز کردن محل قرار گرفتن تقویم\r\n   */\r\n  updatePosition(): void {\r\n    this.bsPopover?.update();\r\n    this.bsModal?.handleUpdate();\r\n  }\r\n  /**\r\n   * به روز کردن متن نمایش تاریخ روز انتخاب شده\r\n   */\r\n  updateSelectedDateText(): void {\r\n    MdsPersianDateTimePicker.setSelectedData(this.setting);\r\n  }\r\n  /**\r\n   * از بین بردن تقویم\r\n   */\r\n  dispose(): void {\r\n    if (this.bsPopover != null)\r\n      this.bsPopover.dispose();\r\n    if (this.bsModal != null)\r\n      this.bsModal.dispose();\r\n    this.element.removeEventListener('click', this.showPopoverEvent);\r\n    this.bsPopover = null;\r\n    this.bsModal = null;\r\n  }\r\n  /**\r\n   * دریافت اینستنس پاپ آور بوت استرپ\r\n   */\r\n  getBsPopoverInstance(): Popover | null {\r\n    return this.bsPopover;\r\n  }\r\n  /**\r\n   * دریافت اینستنس مدال بوت استرپ\r\n   * در صورتی که آپشن modalMode را صحیح کرده باشید\r\n   */\r\n  getBsModalInstance(): Modal | null {\r\n    return this.bsModal;\r\n  }\r\n  /**\r\n   * دریافت متن تاریخ انتخاب شده\r\n   */\r\n  getText(): string {\r\n    return MdsPersianDateTimePicker.getSelectedDateFormatted(this.setting);\r\n  }\r\n  /**\r\n   * دریافت آبجکت تاریخ انتخاب شده\r\n   */\r\n  getSelectedDate(): Date | null {\r\n    return this.setting.selectedDate;\r\n  }\r\n  /**\r\n   * دریافت آبجکت های تاریخ های انتخاب شده در مد رنج سلکتور\r\n   */\r\n  getSelectedDateRange(): Date[] {\r\n    return this.setting.selectedRangeDate;\r\n  }\r\n  /**\r\n  * بروز کردن تاریخ انتخاب شده\r\n  */\r\n  setDate(date: Date): void {\r\n    this.updateOptions({\r\n      selectedDate: date,\r\n      selectedDateToShow: date\r\n    });\r\n  }\r\n  /**\r\n  * بروز کردن تاریخ انتخاب شده با استفاده از تاریخ شمسی\r\n  */\r\n  setDatePersian(yearPersian: number, monthPersian: number, dayPersian: number): void {\r\n    const gregorianDateJson = MdsPersianDateTimePicker.toGregorian(yearPersian, monthPersian, dayPersian);\r\n    console.log(gregorianDateJson);\r\n    const date = new Date(gregorianDateJson.gy, gregorianDateJson.gm - 1, gregorianDateJson.gd);\r\n    this.updateOptions({\r\n      selectedDate: date,\r\n      selectedDateToShow: date\r\n    });\r\n  }\r\n  /**\r\n  * بروز کردن رنج تاریخی انتخاب شده\r\n  */\r\n  setDateRange(startDate: Date, endDate: Date): void {\r\n    this.updateOptions({\r\n      selectedDate: startDate,\r\n      selectedDateToShow: startDate,\r\n      selectedRangeDate: [startDate, endDate]\r\n    });\r\n  }\r\n  /**\r\n  * حذف تاریخ انتخاب شده\r\n  */\r\n  clearDate(): void {\r\n    this.updateOptions({\r\n      selectedDate: null,\r\n      selectedDateToShow: new Date(),\r\n    });\r\n  }\r\n  /**\r\n   * بروز کردن تنظیمات تقویم\r\n   * @param optionName نام آپشن مورد نظر\r\n   * @param value مقدار\r\n   */\r\n  updateOption(optionName: string, value: any): void {\r\n    if (!optionName) return;\r\n    value = MdsPersianDateTimePicker.correctOptionValue(optionName, value);\r\n    (<any>this.setting)[optionName] = value;\r\n    MdsPersianDateTimePickerData.set(this.guid, this);\r\n    this.initializeBsPopover(this.setting);\r\n  }\r\n  /**\r\n   * بروز کردن تنظیمات تقویم\r\n   * @param options تنظیمات مورد نظر\r\n   */\r\n  updateOptions(options: any): void {\r\n    Object.keys(options).forEach((key) => {\r\n      (<any>this.setting)[key] = MdsPersianDateTimePicker.correctOptionValue(key, (<any>options)[key]);\r\n    });\r\n    MdsPersianDateTimePickerData.set(this.guid, this);\r\n    this.initializeBsPopover(this.setting);\r\n  }\r\n  /**\r\n * تبدیل آبجکت تاریخ به رشته\r\n * @param date آبجکت تاریخ\r\n * @param isGregorian آیا تاریخ میلادی مد نظر است یا تبدیل به شمسی شود\r\n * @param format فرمت مورد نظر برای تبدیل تاریخ به رشته\r\n */\r\n  static convertDateToString = (date: Date, isGregorian: boolean, format: string): string => {\r\n    return MdsPersianDateTimePicker.getDateTimeString(!isGregorian ? MdsPersianDateTimePicker.getDateTimeJsonPersian1(date) : MdsPersianDateTimePicker.getDateTimeJson1(date), format, isGregorian, !isGregorian);\r\n  };\r\n  /**\r\n * تبدیل آبجکت تاریخ به شمسی\r\n * @param date آبجکت تاریخ\r\n */\r\n  static convertDateToJalali = (date: Date): MdsPersianDateTimePickerConvertedDateModel => {\r\n    const dateTimeJson1 = MdsPersianDateTimePicker.getDateTimeJson1(date);\r\n    const jalaliJsonModel = MdsPersianDateTimePicker.toJalali(dateTimeJson1.year, dateTimeJson1.month, dateTimeJson1.day);\r\n    return {\r\n      year: jalaliJsonModel.jy,\r\n      month: jalaliJsonModel.jm,\r\n      day: jalaliJsonModel.jd,\r\n    }\r\n  };\r\n  /**\r\n   * دریافت اینستنس تقویم از روی المانی که تقویم روی آن فعال شده است\r\n   * @param element المانی که تقویم روی آن فعال شده\r\n   * @returns اینستنس تقویم\r\n   */\r\n  static getInstance(element: Element): MdsPersianDateTimePicker | null {\r\n    let elementGuid = element.getAttribute('data-mds-dtp-guid');\r\n    if (!elementGuid) {\r\n      elementGuid = element.closest('[data-mds-dtp-guid]')?.getAttribute('data-mds-dtp-guid') ?? null;\r\n      if (!elementGuid) {\r\n        const id = element.closest('[data-mds-dtp]')?.getAttribute('id');\r\n        if (!id)\r\n          return null;\r\n        elementGuid = document.querySelector('[aria-describedby=\"' + id + '\"]')?.getAttribute('data-mds-dtp-guid') ?? null;\r\n        if (!elementGuid)\r\n          return null;\r\n      }\r\n    };\r\n    return MdsPersianDateTimePickerData.get(elementGuid);\r\n  }\r\n\r\n  // #endregion\r\n}\r\n\r\ninterface GetDateTimeJson1 {\r\n  year: number,\r\n  month: number,\r\n  day: number,\r\n  hour: number,\r\n  minute: number,\r\n  second: number,\r\n  millisecond: number,\r\n  dayOfWeek: number\r\n}\r\n\r\ninterface JalaliJsonModel {\r\n  jy: number,\r\n  jm: number,\r\n  jd: number\r\n}\r\n\r\n\r\ninterface GregorianJsonModel {\r\n  gy: number,\r\n  gm: number,\r\n  gd: number\r\n}\r\n\r\ninterface JalCalModel {\r\n  leap: number,\r\n  gy: number,\r\n  march: number\r\n}\r\n\r\ninterface MdsPersianDateTimePickerYearToSelect {\r\n  yearStart: number,\r\n  yearEnd: number,\r\n  html: string\r\n}\r\n\r\ntype PopoverPlacement = 'auto' | 'top' | 'bottom' | 'left' | 'right';\r\n\r\nexport class MdsPersianDateTimePickerSetting {\r\n  /**\r\n   * محل قرار گرفتن تقویم\r\n   */\r\n  placement: PopoverPlacement | (() => PopoverPlacement) | undefined = 'bottom';\r\n  /**\r\n   * فعال بودن تایم پیکر\r\n   */\r\n  enableTimePicker = false;\r\n  /**\r\n   * سلکتور نمایش روز انتخاب شده\r\n   */\r\n  targetTextSelector = '';\r\n  /**\r\n   * سلکتور ذخیره تاریخ میلادی، برای روز انتخاب شده\r\n   */\r\n  targetDateSelector = '';\r\n  /**\r\n   * آیا تقویم برای کنترل روز پایانی تاریخ است\r\n   */\r\n  toDate = false;\r\n  /**\r\n   * آیا تقویم برای کنترل روز شروع تاریخ است\r\n   */\r\n  fromDate = false;\r\n  /**\r\n   * شناسه گروه در حالتی که از \r\n   * toDate\r\n   * و\r\n   * fromDate\r\n   * استفاده شده است\r\n   */\r\n  groupId = '';\r\n  /**\r\n   * آیا تقویم غیر فعال است؟\r\n   */\r\n  disabled = false;\r\n  /**\r\n   * فرمت نمایش روز انتخاب شده تقویم\r\n   */\r\n  textFormat = '';\r\n  /**\r\n   * فرمت ذخیره تاریخ میلادی انتخاب شده\r\n   */\r\n  dateFormat = '';\r\n  /**\r\n   * آیا تقویم میلادی استفاده شود؟\r\n   */\r\n  isGregorian = false;\r\n  /**\r\n   * آیا تقویم به صورت این لاین نمایش داده شود؟\r\n   */\r\n  inLine = false;\r\n  /**\r\n   * تاریخ انتخاب شده\r\n   */\r\n  selectedDate: Date | null = null;\r\n  /**\r\n   * تاریخی که نمایش تقویم از آن شروع می شود\r\n   */\r\n  selectedDateToShow = new Date();\r\n  /**\r\n   * تعداد سال های قابل نمایش در لیست سال های قابل انتخاب\r\n   */\r\n  yearOffset = 15;\r\n  /**\r\n   * تاریخ میلادی روزهای تعطیل\r\n   */\r\n  holidays: Date[] = [];\r\n  /**\r\n   * تاریخ میلادی روزهای غیر فعال\r\n   */\r\n  disabledDates: Date[] = [];\r\n  /**\r\n   * عدد روزهایی از هفته که غیر فعال هستند\r\n   */\r\n  disabledDays: number[] = [];\r\n  /**\r\n   * تاریخ میلادی روزهای خاص\r\n   */\r\n  specialDates: Date[] = [];\r\n  /**\r\n   * آیا روزهای قبل از امروز غیر فعال شوند؟\r\n   */\r\n  disableBeforeToday = false;\r\n  /**\r\n   * آیا روزهای بعد از امروز غیر فعال شوند؟\r\n   */\r\n  disableAfterToday = false;\r\n  /**\r\n   * روزهای قبل از این تاریخ غیر فعال شود\r\n   */\r\n  disableBeforeDate: Date | null = null;\r\n  /**\r\n   * روزهای بعد از این تاریخ غیر فعال شود\r\n   */\r\n  disableAfterDate: Date | null = null;\r\n  /**\r\n   * آیا تقویم به صورت انتخاب بازه نمایش داده شود؟\r\n   */\r\n  rangeSelector = false;\r\n  /**\r\n   * تاریخ شروع تقویم در مد انتخاب بازه تاریخی برای نمایش\r\n   */\r\n  rangeSelectorStartDate: Date | null = null;\r\n  /**\r\n   * تاریخ پایان تقویم در مد انتخاب بازه تاریخی برای نمایش\r\n   */\r\n  rangeSelectorEndDate: Date | null = null;\r\n  /**\r\n   * تعداد ماه های قابل نمایش در قابلیت انتخاب بازه تاریخی\r\n   */\r\n  rangeSelectorMonthsToShow: number[] = [0, 0];\r\n  /**\r\n   * تاریخ های انتخاب شده در مد بازه انتخابی\r\n   */\r\n  selectedRangeDate: Date[] = [];\r\n  /**\r\n   * آیا تقویم به صورت مدال نمایش داده شود\r\n   */\r\n  modalMode = false;\r\n  /**\r\n   * تبدیل اعداد به فارسی\r\n   */\r\n  persianNumber = false;\r\n  /**\r\n   * رویداد عوض شدن ماه و تاریخ در دیت پیکر\r\n   * @param _ تاریخ ماه انتخابی\r\n   */\r\n  calendarViewOnChange = (_: Date) => { };\r\n  /**\r\n   * رویداد انتخاب روز در دیت پیکر\r\n   * @param _ تمامی تنظیمات دیت پیکر\r\n   */\r\n  onDayClick = (_: MdsPersianDateTimePickerSetting) => { }\r\n}\r\n\r\nexport interface MdsPersianDateTimePickerConvertedDateModel {\r\n  year: number,\r\n  month: number,\r\n  day: number,\r\n}\r\n\r\nconst MdsPersianDateTimePickerElementMap = new Map();\r\nvar MdsPersianDateTimePickerData = {\r\n  set(key: string, instance: MdsPersianDateTimePicker): void {\r\n    if (!MdsPersianDateTimePickerElementMap.has(key)) {\r\n      MdsPersianDateTimePickerElementMap.set(key, instance);\r\n      return;\r\n    }\r\n    MdsPersianDateTimePickerElementMap.set(key, instance);\r\n  },\r\n  get(key: string): MdsPersianDateTimePicker {\r\n    return MdsPersianDateTimePickerElementMap.get(key) || null;\r\n  },\r\n  getAll(): MdsPersianDateTimePicker[] {\r\n    return Array.from(MdsPersianDateTimePickerElementMap, ([_name, value]) => value);\r\n  },\r\n  remove(key: string): void {\r\n    if (!MdsPersianDateTimePickerElementMap.has(key)) {\r\n      return;\r\n    }\r\n    MdsPersianDateTimePickerElementMap.delete(key);\r\n  }\r\n};\r\n","\"use strict\";\n\n// eslint-disable-next-line func-names\nmodule.exports = function () {\n  if (typeof globalThis === \"object\") {\n    return globalThis;\n  }\n  var g;\n  try {\n    // This works if eval is allowed (see CSP)\n    // eslint-disable-next-line no-new-func\n    g = this || new Function(\"return this\")();\n  } catch (e) {\n    // This works if the window reference is available\n    if (typeof window === \"object\") {\n      return window;\n    }\n\n    // This works if the self reference is available\n    if (typeof self === \"object\") {\n      return self;\n    }\n\n    // This works if the global reference is available\n    if (typeof global !== \"undefined\") {\n      return global;\n    }\n  }\n  return g;\n}();","var ___EXPOSE_LOADER_IMPORT___ = require(\"-!../node_modules/ts-loader/index.js!./mds.bs.datetimepicker.ts\");\nvar ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\"../node_modules/expose-loader/dist/runtime/getGlobalThis.js\");\nvar ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___;\nif (typeof ___EXPOSE_LOADER_GLOBAL_THIS___[\"mds\"] === 'undefined') ___EXPOSE_LOADER_GLOBAL_THIS___[\"mds\"] = ___EXPOSE_LOADER_IMPORT___;\nmodule.exports = ___EXPOSE_LOADER_IMPORT___;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(209);\n"],"names":["bootstrap","MdsPersianDateTimePicker","constructor","element","setting","guid","bsPopover","bsModal","tempTitleString","hideYearsBox","inLine","dtpInLine","closest","dtpInlineHeaderElement","querySelector","this","innerHTML","yearListBoxElement","classList","add","inlineYearsContainerElement","remove","popoverOrModalElement","modalMode","getModal","getPopover","removeAttribute","yearListBox","showYearsBox","instance","getInstance","mdDatePickerContainer","textContent","trim","yearsToSelectObject","getYearsBoxBodyHtml","dateTimePickerYearsToSelectHtml","html","dateTimePickerYearsToSelectContainer","setPopoverHeaderHtml","getYearsBoxHeaderHtml","yearStart","yearEnd","setAttribute","changeYearList","isNext","getAttribute","Number","yearOffset","htmlString","popoverElement","inlineTitleBox","updateCalendarBodyHtml","updatePopoverContent","calendarHtml","getDateTimePickerBodyHtml","dtpInlineHeader","match","popover","getBsPopoverInstance","setTimeout","setContent","console","error","containerElement","enableEvents","enableInLineEvents","changeMonth","disabled","dateNumber","selectedDateToShow","getClonedDate","getDateTime4","isGregorian","MdsPersianDateTimePickerData","set","undefined","calendarViewOnChange","selectDay","selectedDate","enableTimePicker","setHours","setMinutes","setSeconds","selectedDateJson","getDateTimeJson1","Date","selectedDateToShowJson","onDayClick","rangeSelector","rangeSelectorStartDate","rangeSelectorEndDate","selectedRangeDate","closestSelector","querySelectorAll","forEach","e","getTime","setSelectedData","hide","hour","minute","second","toDate","fromDate","toDateElement","document","groupId","fromDateElement","toDateInstance","initializeBsPopover","fromDateInstance","dtp","hoverOnDays","target","allDayElements","slice","call","allNextOrPrevMonthDayElements","rangeSelectorStartDateNumber","rangeSelectorEndDateNumber","convertToNumber3","convertToNumber1","getDateTimeJsonPersian1","i1","filter","toString","value","indexOf","i2","goToday","timeChanged","substr","popoverInsertedEvent","popoverOrModalShownEvent","popoverOrModalHiddenEvent","disableEvents","selectCorrectClickEvent","showPopoverEvent","getAll","i","show","hidePopoverEvent","tagName","extend","MdsPersianDateTimePickerSetting","Error","textFormat","dateFormat","newGuid","toJalali","gy","gm","gd","d2j","g2d","toGregorian","jy","jm","jd","d2g","j2d","isLeapJalaliYear","jalCal","leap","n","breaks","bl","length","leapJ","jp","jump","div","mod","march","r","jdn","k","d","j","a","b","rangeSelectorMonthsToShow","dispose","title","getPopoverHeaderTitle","datePickerBodyHtml","tempDiv","createElement","setModalHtml","el","Modal","enableMainEvents","Popover","container","content","placement","trigger","template","popoverHtmlTemplate","sanitize","replace","c","Math","random","args","key","hasOwnProperty","dateTime","year","getFullYear","month","getMonth","day","getDate","getHours","getMinutes","getSeconds","millisecond","getMilliseconds","dayOfWeek","getDay","getDateTimeJson2","floor","persianDate","getDateTimeJsonPersian2","yearPersian","monthPersian","dayPersian","isNumber","gregorian","getWeekDayName","englishWeekDayIndex","weekDayNames","weekDayNamesPersian","getMonthName","monthIndex","monthNames","monthNamesPersian","getWeekDayShortName","shortDayNames","shortDayNamesPersian","isLeapYear","persianYear","getDaysInMonthPersian","numberOfDaysInMonth","getDaysInMonth","getLastDayDateOfPreviousMonth","dateTimeLocal","previousMonth","daysInMonth","dateTimeJsonPersian","getDateTime1","getFirstDayDateOfNextMonth","nextMonth","getDateTime2","getDateTime3","dateTimeJson","getLesserDisableBeforeDate","resultDate","dateNow","disableBeforeToday","disableBeforeDate","getBiggerDisableAfterDate","disableAfterDate","disableAfterToday","addMonthToDateTimeJson","addedMonth","dateTimeJson1","Object","assign","zeroPad","convertToNumber2","correctOptionValue","optionName","keys","Array","isArray","item","getShortHour","shortHour","getAmPm","amPm","addMonthToDateTime","isNaN","parseFloat","isFinite","toPersianNumber","inputNumber1","str1","toEnglishNumber","nr","base","len","String","join","getDateTimeString","format","persianNumber","getSelectedDateTimeTextFormatted","getSelectedDateFormatted","getDisabledDateObject","disableBeforeDateTimeJson","disableAfterDateTimeJson","toDateSetting","toDateSelectedDate","fromDateSetting","fromDateSelectedDate","targetTextElement","targetTextSelector","targetDateElement","targetDateSelector","changeEvent","Event","dateTimeTextFormat","toLowerCase","dispatchEvent","dateTimeFormat","popoverId","getElementById","prevModalElement","modalHtml","modalHtmlTemplate","appendChild","modalDialogElement","warn","yearToStart","disabledDateObj","todayDateTimeJson","selectedDateTimeToShowJson","dateTimePickerYearsToSelectHtmlTemplate","yearsBoxHtml","counter","disabledAttr","currentYearDateTimeJson","currentYearDisabledAttr","yearText","yearDateNumber","todayAttr","selectedYearAttr","selectedYearTitle","currentYearText","currentYearTextPersian","cancelText","cancelTextPersian","yearsRangeText","popoverHeaderSelectYearHtmlTemplate","previousText","previousTextPersian","nextText","nextTextPersian","getDateTimePickerMonthHtml","isNextMonth","isPrevMonth","selectedDateToShowTemp","selectedDateTime","isNextOrPrevMonth","dateTimePickerMonthTableHtmlTemplate","previousYearText","previousYearTextPersian","previousMonthText","previousMonthTextPersian","nextMonthText","nextMonthTextPersian","nextYearText","nextYearTextPersian","firstWeekDayNumber","dateTimeToShowJson","cellNumber","tdNumber","selectedDateNumber","selectedMonthName","numberOfDaysInCurrentMonth","numberOfDaysInPreviousMonth","tr","td","daysHtml","currentDateNumber","previousMonthDateNumber","nextMonthDateNumber","previousYearDateNumber","nextYearDateNumber","dayNumberInString","monthsDateNumberAndAttr","month1DateNumber","month2DateNumber","month3DateNumber","month4DateNumber","month5DateNumber","month6DateNumber","month7DateNumber","month8DateNumber","month9DateNumber","month10DateNumber","month11DateNumber","month12DateNumber","selectMonth1ButtonCssClass","selectMonth2ButtonCssClass","selectMonth3ButtonCssClass","selectMonth4ButtonCssClass","selectMonth5ButtonCssClass","selectMonth6ButtonCssClass","selectMonth7ButtonCssClass","selectMonth8ButtonCssClass","selectMonth9ButtonCssClass","selectMonth10ButtonCssClass","selectMonth11ButtonCssClass","selectMonth12ButtonCssClass","holidaysDateNumbers","disabledDatesNumber","specialDatesNumber","previousYearButtonDisabledAttribute","previousMonthButtonDisabledAttribute","selectYearButtonDisabledAttribute","nextMonthButtonDisabledAttribute","nextYearButtonDisabledAttribute","isTrAppended","setFullYear","setMonth","holidays","push","disabledDates","specialDates","todayDateNumber","selectedYear","disableBeforeDateTimeNumber","disableAfterDateTimeNumber","currentMonthInfo","previousMonthDateTimeJson","outerHTML","todayText","todayTextPersian","disabledDays","nextMonthDateTimeJson","startDate","endDate","statDateJson","endDateJson","startMonthName","endMonthName","dateTimePickerHtmlTemplate","goTodayText","goTodayTextPersian","todayDateString","monthsTdHtml","numberOfNextMonths","numberOfPrevMonths","totalMonthNumberToShow","abs","monthTdStyle","addEventListener","modalElement","removeEventListener","toggle","enable","disable","updatePosition","update","handleUpdate","updateSelectedDateText","getBsModalInstance","getText","getSelectedDate","getSelectedDateRange","setDate","date","updateOptions","setDatePersian","gregorianDateJson","log","setDateRange","clearDate","updateOption","options","elementGuid","id","get","convertDateToString","convertDateToJalali","jalaliJsonModel","_","MdsPersianDateTimePickerElementMap","Map","has","from","_name","delete","module","exports","globalThis","g","Function","window","self","___EXPOSE_LOADER_IMPORT___","___EXPOSE_LOADER_GLOBAL_THIS___","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","o","defineProperty","enumerable","obj","prop","prototype","Symbol","toStringTag"],"sourceRoot":""}